#'     # add ablines of national mean or mean
#'     if (is.null(xmean)) xmean <- round(mean(data$x), 2)
#'     if (is.null(ymean)) ymean <- round(mean(data$y), 2)
#'     abline(h = ymean, v = xmean, col = '#c00000', lwd = 3, lty = 2)
#'   }
#'
#'   #spread.labels(data$x, data$y, data$Province, offsets = 0.01)
#'
#' }
#'
#'
#'
#' #' plotWaternomics_legend
#' #'
#' #' legend for plot special waternomics chart for CWR
#' #'
#' #' @param label whether to show label, default is TRUE
#' #' @importFrom mapplots add.pie
#' #' @importFrom graphics plot abline text
#' #' @importFrom grDevices rgb
#' #' @export
#' #' @examples
#' #' \dontrun{
#' #' plotwaternomics_legend()
#' #' }
#' plotWaternomics_legend <- function(label = TRUE) {
#'   r <- c(5, 3, 1.5)
#'   x <- c(0, 0, 0)
#'   y <- c(7, 16, 21)
#'   plot (x, y, xlim = c(-3, 3), ylim = c(0, 23), xaxt = 'n', yaxt = 'n', bty = 'n')
#'
#'   col <- c(rgb(107/255, 128/255, 51/255), rgb(2/255, 3/255, 3/255), rgb(13/255, 119/255, 185/255))
#'
#'   for (i in 1:3) {
#'     add.pie(x = x[i], y = y[i], z = c(1, 1, 1), radius = r[i], labels = '', col = col, border = 'white')
#'   }
#'   if (label == TRUE) {
#'     size <- 1.2
#'     text(-0.7, 8.5, "Service", col = 'white', cex = size)
#'     text(0.7, 8.5, "Agriculture", col = 'white', cex = size)
#'     text(0, 4, "Industry", col = 'white', cex = size)
#'   }
#' }
#'
#'
#'
#'
#'
#'
#'
#'
xlim <- getLim(data$x)
ylim <- getLim(data$y)
xlim
ylim
adjustxlim(xlim, ylim)
ratio <- (ylim[2] - ylim[1])/(xlim[2] - xlim[1])
ratio
ratio <- (ylim[2] - ylim[1])/(xlim[2] - xlim[1])/0.75
ratio
data$x1 <- data$x
data$x <- data$x1 * ratio
with (data, {
layer_basic <- ggplot()
#      geom_point(data = data, aes(x, y)) + theme(aspect.ratio = 0.75)
data$radius <- getRadius(data$r)
layer_pie <- geom_scatterpie(data = data, aes(x, y, r = radius),
cols = colnames(data)[pieRange], color = NA)
if (is.null(labelLine)) labelLine <- max(data$radius)/3
layer_label <- geom_text_repel(data = data, aes(x, y, label = label),
point.padding = unit(labelLine, "lines"))
#layer_legend <- geom_scatterpie_legend(data$radius, x= 0, y=0)
if (xmeanLine == TRUE) layer_basic <- layer_basic + geom_vline(xintercept = mean(data$x), color = 'red', size = 1.5, linetype = 2)
if (ymeanLine == TRUE) layer_basic <- layer_basic + geom_hline(yintercept = mean(data$y), color = 'red', size = 1.5, linetype = 2)
layer_plot <- layer_basic + layer_pie + layer_label + scale_fill_manual(values=pieColor) +
coord_equal() + ggstyle()
print(layer_plot)
})
labelLine <- NULL
with (data, {
layer_basic <- ggplot()
#      geom_point(data = data, aes(x, y)) + theme(aspect.ratio = 0.75)
data$radius <- getRadius(data$r)
layer_pie <- geom_scatterpie(data = data, aes(x, y, r = radius),
cols = colnames(data)[pieRange], color = NA)
if (is.null(labelLine)) labelLine <- max(data$radius)/3
layer_label <- geom_text_repel(data = data, aes(x, y, label = label),
point.padding = unit(labelLine, "lines"))
#layer_legend <- geom_scatterpie_legend(data$radius, x= 0, y=0)
if (xmeanLine == TRUE) layer_basic <- layer_basic + geom_vline(xintercept = mean(data$x), color = 'red', size = 1.5, linetype = 2)
if (ymeanLine == TRUE) layer_basic <- layer_basic + geom_hline(yintercept = mean(data$y), color = 'red', size = 1.5, linetype = 2)
layer_plot <- layer_basic + layer_pie + layer_label + scale_fill_manual(values=pieColor) +
coord_equal() + ggstyle()
print(layer_plot)
})
xmeanLine <- T
ymeanLine <- T
with (data, {
layer_basic <- ggplot()
#      geom_point(data = data, aes(x, y)) + theme(aspect.ratio = 0.75)
data$radius <- getRadius(data$r)
layer_pie <- geom_scatterpie(data = data, aes(x, y, r = radius),
cols = colnames(data)[pieRange], color = NA)
if (is.null(labelLine)) labelLine <- max(data$radius)/3
layer_label <- geom_text_repel(data = data, aes(x, y, label = label),
point.padding = unit(labelLine, "lines"))
#layer_legend <- geom_scatterpie_legend(data$radius, x= 0, y=0)
if (xmeanLine == TRUE) layer_basic <- layer_basic + geom_vline(xintercept = mean(data$x), color = 'red', size = 1.5, linetype = 2)
if (ymeanLine == TRUE) layer_basic <- layer_basic + geom_hline(yintercept = mean(data$y), color = 'red', size = 1.5, linetype = 2)
layer_plot <- layer_basic + layer_pie + layer_label + scale_fill_manual(values=pieColor) +
coord_equal() + ggstyle()
print(layer_plot)
})
pieColor <- NULL
with (data, {
layer_basic <- ggplot()
#      geom_point(data = data, aes(x, y)) + theme(aspect.ratio = 0.75)
data$radius <- getRadius(data$r)
layer_pie <- geom_scatterpie(data = data, aes(x, y, r = radius),
cols = colnames(data)[pieRange], color = NA)
if (is.null(labelLine)) labelLine <- max(data$radius)/3
layer_label <- geom_text_repel(data = data, aes(x, y, label = label),
point.padding = unit(labelLine, "lines"))
#layer_legend <- geom_scatterpie_legend(data$radius, x= 0, y=0)
if (xmeanLine == TRUE) layer_basic <- layer_basic + geom_vline(xintercept = mean(data$x), color = 'red', size = 1.5, linetype = 2)
if (ymeanLine == TRUE) layer_basic <- layer_basic + geom_hline(yintercept = mean(data$y), color = 'red', size = 1.5, linetype = 2)
layer_plot <- layer_basic + layer_pie + layer_label + scale_fill_manual(values=pieColor) +
coord_equal() + ggstyle()
print(layer_plot)
})
layer_basic <- ggplot()
data$radius <- getRadius(data$r)
layer_pie <- geom_scatterpie(data = data, aes(x, y, r = radius),
cols = colnames(data)[pieRange], color = NA)
layer_pie
layer_pie()
layer_basic + layer_pie
layer_basic + layer_pie + coord_equal()
layer_label <- geom_text_repel(data = data, aes(x, y, label = label),
point.padding = unit(labelLine, "lines"))
if (is.null(labelLine)) labelLine <- max(data$radius)/3
layer_label <- geom_text_repel(data = data, aes(x, y, label = label),
point.padding = unit(labelLine, "lines"))
if (xmeanLine == TRUE) layer_basic <- layer_basic + geom_vline(xintercept = mean(data$x), color = 'red', size = 1.5, linetype = 2)
if (ymeanLine == TRUE) layer_basic <- layer_basic + geom_hline(yintercept = mean(data$y), color = 'red', size = 1.5, linetype = 2)
layer_plot <- layer_basic + layer_pie + layer_label + scale_fill_manual(values=pieColor) +
coord_equal() + ggstyle()
print(layer_plot)
if (!is.null(pieColor)) layer_basic <- layer_basic + scale_fill_manual(values=pieColor)
layer_plot <- layer_basic + layer_pie + layer_label  +
coord_equal() + ggstyle()
print(layer_plot)
GDPColor_CWR <- c("#6B8033", "#020303", "#0D77B9")
if (!is.null(pieColor)) layer_basic <- layer_basic + scale_fill_manual(values=pieColor)
layer_plot <- layer_basic + layer_pie + layer_label  +
coord_equal() + ggstyle()
print(layer_plot)
!is.null(pieColor)
pieColor
pieColor = GDPColor_CWR
if (!is.null(pieColor)) layer_basic <- layer_basic + scale_fill_manual(values=pieColor)
layer_plot <- layer_basic + layer_pie + layer_label  +
coord_equal() + ggstyle()
print(layer_plot)
layer_plot <- layer_basic + layer_pie + layer_label  +
coord_equal() + ggstyle() +
scale_x_continuous(labels = data$x1)
print(layer_plot)
layer_plot <- layer_basic + layer_pie + layer_label  +
coord_equal() + ggstyle()
print(layer_plot)
25/ratio
xlim
?trans_new
trans_new('trans', function(x) x/ratio, identity)
library(scales)
trans_new('trans', function(x) x/ratio, identity)
layer_plot <- layer_basic + layer_pie + layer_label  +
coord_equal() + ggstyle() +
scale_y_continuous(trans = trans)
layer_plot <- layer_basic + layer_pie + layer_label  +
coord_equal() + ggstyle() +
scale_y_continuous(trans = 'trans')
trans_trans <- function() {
trans_new('trans', function(x) x/ratio, identity)
}
layer_plot <- layer_basic + layer_pie + layer_label  +
coord_equal() + ggstyle() +
scale_y_continuous(trans = 'trans')
print(layer_plot)
layer_plot <- layer_basic + layer_pie + layer_label  +
coord_equal() + ggstyle() +
scale_x_continuous(trans = 'trans')
print(layer_plot)
ratio
trans_trans <- function() {
trans_new('trans', function(x) x/ratio)
}
layer_plot <- layer_basic + layer_pie + layer_label  +
coord_equal() + ggstyle() +
scale_x_continuous(trans = 'trans')
trans_trans <- function(ratio) {
trans_new('trans',
transform = function(x) {
y <- x/ratio
return(y)
},
inverse = function(y) {
x <- y * ratio
return(x)
})
}
layer_plot <- layer_basic + layer_pie + layer_label  +
coord_equal() + ggstyle() +
scale_x_continuous(trans = trans_trans(ratio))
print(layer_plot)
trans_trans <- function(ratio) {
trans_new('trans',
transform = function(x) {
y <- x * ratio
return(y)
},
inverse = function(y) {
x <- y / ratio
return(x)
})
}
layer_plot <- layer_basic + layer_pie + layer_label  +
coord_equal() + ggstyle() +
scale_x_continuous(trans = trans_trans(ratio))
print(layer_plot)
trans_trans <- function(ratio) {
trans_new('trans',
transform = function(x) {
y <- x / ratio
return(y)
},
inverse = function(y) {
x <- y * ratio
return(x)
})
}
layer_plot <- layer_basic + layer_pie + layer_label  +
coord_equal() + ggstyle() +
scale_x_continuous(trans = trans_trans(ratio))
print(layer_plot)
layer_plot <- layer_basic + layer_pie + layer_label  +
coord_equal() + ggstyle() +
scale_x_continuous(trans = trans_trans(ratio)) + theme(aspect.ratio = 0.75)
print(layer_plot)
layer_plot <- layer_basic + layer_pie + layer_label  +
coord_equal() + ggstyle() +
scale_x_continuous(trans = trans_trans(ratio))
print(layer_plot)
layer_label <- geom_text_repel(data = data, aes(x, y, label = label),
point.padding = unit(labelLine, "lines")) + scale_x_continuous(trans = trans_trans(ratio))
layer_label <- geom_text_repel(data = data, aes(x, y, label = label),
point.padding = unit(labelLine, "lines")) + scale_x_continuous(trans = trans_trans(ratio))
layer_plot <- layer_basic + layer_pie + layer_label  +
coord_equal() + ggstyle()
print(layer_plot)
i <- max(data$x) - min(data$x)
i
i <- max(data$x1) - min(data$x1)
i
i*ratio
i <- (max(data$x1) - min(data$x1))/5
i
data$x <- data$x1
data$x
trans_trans <- function(ratio) {
trans_new('trans',
transform = function(x) {
y <- x / ratio
return(y)
},
inverse = function(y) {
x <- y * ratio
return(x)
})
}
layer_basic <- ggplot()
layer_pie <- geom_scatterpie(data = data, aes(x, y, r = radius),
cols = colnames(data)[pieRange], color = NA)
layer_label <- geom_text_repel(data = data, aes(x, y, label = label),
point.padding = unit(labelLine, "lines"))
if (xmeanLine == TRUE) layer_basic <- layer_basic + geom_vline(xintercept = mean(data$x), color = 'red', size = 1.5, linetype = 2)
if (ymeanLine == TRUE) layer_basic <- layer_basic + geom_hline(yintercept = mean(data$y), color = 'red', size = 1.5, linetype = 2)
if (!is.null(pieColor)) layer_basic <- layer_basic + scale_fill_manual(values=pieColor)
layer_plot <- layer_basic + layer_pie + layer_label  +
coord_equal() + ggstyle() +
scale_x_continuous(trans = trans_trans(ratio))
print(layer_plot)
trans_trans <- function(ratio) {
trans_new('trans',
transform = function(x) {
y <- x * ratio
return(y)
},
inverse = function(y) {
x <- y / ratio
return(x)
})
}
data$x <- data$x1 * ratio
layer_pie <- geom_scatterpie(data = data, aes(x, y, r = radius),
cols = colnames(data)[pieRange], color = NA)
if (is.null(labelLine)) labelLine <- max(data$radius)/3
layer_label <- geom_text_repel(data = data, aes(x, y, label = label),
point.padding = unit(labelLine, "lines"))
if (xmeanLine == TRUE) layer_basic <- layer_basic + geom_vline(xintercept = mean(data$x), color = 'red', size = 1.5, linetype = 2)
if (ymeanLine == TRUE) layer_basic <- layer_basic + geom_hline(yintercept = mean(data$y), color = 'red', size = 1.5, linetype = 2)
if (!is.null(pieColor)) layer_basic <- layer_basic + scale_fill_manual(values=pieColor)
layer_plot <- layer_basic + layer_pie + layer_label  +
coord_equal() + ggstyle() +
scale_x_continuous(trans = trans_trans(ratio))
print(layer_plot)
data$x
data$x1
layer_plot <- layer_basic + layer_pie + layer_label  +
coord_equal() + ggstyle()
print(layer_plot)
layer_basic <- ggplot()
layer_pie <- geom_scatterpie(data = data, aes(x, y, r = radius),
cols = colnames(data)[pieRange], color = NA)
if (is.null(labelLine)) labelLine <- max(data$radius)/3
layer_label <- geom_text_repel(data = data, aes(x, y, label = label),
point.padding = unit(labelLine, "lines"))
if (xmeanLine == TRUE) layer_basic <- layer_basic + geom_vline(xintercept = mean(data$x), color = 'red', size = 1.5, linetype = 2)
if (ymeanLine == TRUE) layer_basic <- layer_basic + geom_hline(yintercept = mean(data$y), color = 'red', size = 1.5, linetype = 2)
if (!is.null(pieColor)) layer_basic <- layer_basic + scale_fill_manual(values=pieColor)
layer_plot <- layer_basic + layer_pie + layer_label  +
coord_equal() + ggstyle()
print(layer_plot)
data$x <- data$x1
data$x
layer_basic <- ggplot()
layer_pie <- geom_scatterpie(data = data, aes(x, y, r = radius),
cols = colnames(data)[pieRange], color = NA)
if (is.null(labelLine)) labelLine <- max(data$radius)/3
layer_label <- geom_text_repel(data = data, aes(x, y, label = label),
point.padding = unit(labelLine, "lines"))
if (xmeanLine == TRUE) layer_basic <- layer_basic + geom_vline(xintercept = mean(data$x), color = 'red', size = 1.5, linetype = 2)
if (ymeanLine == TRUE) layer_basic <- layer_basic + geom_hline(yintercept = mean(data$y), color = 'red', size = 1.5, linetype = 2)
if (!is.null(pieColor)) layer_basic <- layer_basic + scale_fill_manual(values=pieColor)
layer_plot <- layer_basic + layer_pie + layer_label  +
coord_equal() + ggstyle() +
scale_x_continuous(trans = trans_trans(ratio))
print(layer_plot)
ratio
layer_plot <- layer_basic + layer_pie + layer_label  +
coord_equal() + ggstyle() +
scale_x_continuous(trans = trans_trans(15))
print(layer_plot)
layer_label <- geom_text_repel(data = data, aes(x, y, label = label),
point.padding = unit(labelLine, "lines")) + scale_x_continuous(trans = trans_trans(15))
layer_basic <- ggplot()
geom_point(data = data, aes(x, y))
layer_pie <- geom_scatterpie(data = data, aes(x, y, r = radius),
cols = colnames(data)[pieRange], color = NA)
layer_label <- geom_text_repel(data = data, aes(x, y, label = label),
point.padding = unit(labelLine, "lines"))
layer_plot <- layer_basic + layer_pie + layer_label  +
coord_equal() + ggstyle() +
scale_x_continuous(trans = trans_trans(15))
print(layer_plot)
layer_basic <- ggplot()
geom_point(data = data, aes(x, y))
layer_basic
layer_basic <- ggplot() +
geom_point(data = data, aes(x, y))
layer_plot <- layer_basic + layer_pie + layer_label  +
coord_equal() + ggstyle() +
scale_x_continuous(trans = trans_trans(15))
print(layer_plot)
layer_basic <- ggplot(aes(x = x)) +
geom_point(data = data, aes(x, y))
layer_basic <- ggplot(data, aes(x = x)) +
geom_point(data = data, aes(x, y))
layer_pie <- geom_scatterpie(data = data, aes(x, y, r = radius),
cols = colnames(data)[pieRange], color = NA)
if (is.null(labelLine)) labelLine <- max(data$radius)/3
layer_label <- geom_text_repel(data = data, aes(x, y, label = label),
point.padding = unit(labelLine, "lines"))
if (xmeanLine == TRUE) layer_basic <- layer_basic + geom_vline(xintercept = mean(data$x), color = 'red', size = 1.5, linetype = 2)
if (ymeanLine == TRUE) layer_basic <- layer_basic + geom_hline(yintercept = mean(data$y), color = 'red', size = 1.5, linetype = 2)
if (!is.null(pieColor)) layer_basic <- layer_basic + scale_fill_manual(values=pieColor)
layer_plot <- layer_basic + layer_pie + layer_label  +
coord_equal() + ggstyle() +
scale_x_continuous(trans = trans_trans(15))
print(layer_plot)
layer_pie <- geom_scatterpie(data = data, aes(x, y, r = radius),
cols = colnames(data)[pieRange], color = NA,
scale_x_continuous(trans = trans_trans(15)))
layer_plot <- layer_basic + layer_pie + layer_label  +
coord_equal() + ggstyle() +
scale_x_continuous(trans = trans_trans(15))
print(layer_plot)
layer_plot <- layer_basic + layer_pie + layer_label  +
coord_equal() + ggstyle()
print(layer_plot)
ggplot() + layer_pie()
ggplot() + layer_pie
layer_pie <- geom_scatterpie(data = data, aes(x, y, r = radius),
cols = colnames(data)[pieRange], color = NA)
ggplot() + layer_pie
ggplot() + layer_pie + scale_x_continuous(trans = trans_trans(15))
trans_trans
trans_trans(15)
ggplot() + layer_pie + scale_x_continuous(trans = trans_trans(5))
ggplot() + layer_pie + scale_x_continuous(trans = trans_trans(0.5))
ggplot() + layer_pie + scale_x_continuous(trans = trans_trans(0.5)) + coord_equal()
data$x <- data$x1 * ratio
layer_basic <- ggplot(data, aes(x = x)) +
geom_point(data = data, aes(x, y))
layer_basic <- ggplot(data, aes(x = x))
layer_pie <- geom_scatterpie(data = data, aes(x, y, r = radius),
cols = colnames(data)[pieRange], color = NA)
if (is.null(labelLine)) labelLine <- max(data$radius)/3
layer_label <- geom_text_repel(data = data, aes(x, y, label = label),
point.padding = unit(labelLine, "lines"))
if (ymeanLine == TRUE) layer_basic <- layer_basic + geom_hline(yintercept = mean(data$y), color = 'red', size = 1.5, linetype = 2)
if (!is.null(pieColor)) layer_basic <- layer_basic + scale_fill_manual(values=pieColor)
if (xmeanLine == TRUE) layer_basic <- layer_basic + geom_vline(xintercept = mean(data$x), color = 'red', size = 1.5, linetype = 2)
layer_plot <- layer_basic + layer_pie + layer_label  +
coord_equal() + ggstyle() +
scale_x_continuous(trans = trans_trans(15))
layer_plot <- layer_basic + layer_pie + layer_label  +
coord_equal() + ggstyle()
scale_x_continuous()
print(layer_plot)
i
x <- c(1.2, 1.6)
round(x)
seq(0, 1, length.out = 11)
labels <- seq(min(data$x1), max(data$x1), length.out = 5)
labels
labels <- round(seq(min(data$x1), max(data$x1), length.out = 5))
breaks <- labels * ratio
breaks
labels
layer_plot <- layer_basic + layer_pie + layer_label  +
coord_equal() + ggstyle()
scale_x_continuous(breaks = breaks, labels = labels)
layer_plot <- layer_basic + layer_pie + layer_label  +
coord_equal() + ggstyle() +
scale_x_continuous(breaks = breaks, labels = labels)
print(layer_plot)
seq(min(data$x1), max(data$x1), length.out = 5)
i
i <- round((max(data$x1) - min(data$x1))/5)
seq(1, 9, by = 2)
seq(1, by = 2, length.out = 5)
seq(1, by = 2, length.out = 6)
labels <- seq(ceiling(min(data$x1)), by = i, length.out = 5))
labels <- seq(ceiling(min(data$x1)), by = i, length.out = 5)
labels
i <- round((max(data$x1) - min(data$x1))/5)
labels <- seq(ceiling(min(data$x1)), by = i, length.out = 6)
breaks <- labels * ratio
layer_plot <- layer_basic + layer_pie + layer_label  +
coord_equal() + ggstyle() +
scale_x_continuous(breaks = breaks, labels = labels)
print(layer_plot)
ceiling(min(data$x1))
min(data$x1)
max(data$x1)
i <- ceilling((max(data$x1) - min(data$x1))/5)
i <- ceiling((max(data$x1) - min(data$x1))/5)
i
labels <- seq(ceiling(min(data$x1)), by = i, length.out = 5)
breaks <- labels * ratio
layer_plot <- layer_basic + layer_pie + layer_label  +
coord_equal() + ggstyle() +
scale_x_continuous(breaks = breaks, labels = labels)
print(layer_plot)
i <- round((max(data$x1) - min(data$x1))/5)
i <- (max(data$x1) - min(data$x1))/5
(max(data$x1) - min(data$x1))/i_adj
i_adj <- round(i)
(max(data$x1) - min(data$x1))/i_adj
n <- ifelse((max(data$x1) - min(data$x1))/i >= 5, 6, 5)
n
devtools::check(cran = T)
devtools::document()
devtools::document()
devtools::check(cran = T)
devtools::document()
devtools::document()
devtools::document()
devtools::check(cran = T)
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::check(cran = T)
devtools::check(cran = T)
devtools::check(cran = T)
devtools::check(cran = T)
devtools::check(cran = T)
devtools::check(cran = T)
install.packages('googlesheets')
install.packages('gsheet')
devtools::check(cran = T)
devtools::check(cran = T)
shiny::runApp('C:/Users/user/Google Drive/CWR/R/Provincial_waternomics')
runApp('C:/Users/user/Google Drive/CWR/R/Provincial_waternomics')
updataNBS(2014, 2015)
library(gfer)
updataNBS(2014, 2015)
devtools::check(cran = T)
updataNBS(2014, 2015)
