data <- getIndexConstnt(indexPool)
#indexTable <- data.table(tickers)
#emptyCols <- data.frame(matrix(0, nrow = nrow(tickers), ncol =nrow(indexPool)))
#indexTable[, c(as.character(indexPool$index)) := emptyCols]
if (!(is.data.frame(tickers)|is.numeric(tickers)|is.character(tickers))) warning('Your input better be a data.frame...')
n <- 1
for (i in tickers[[1]]) {
####################### assign to indexArray
indexArray <- rep(0, (length(indexPool$index) + 1))
names(indexArray) <-  c('ticker', as.character(indexPool$index))
subData <- with(data, {
data[ticker == i]
})
indexArray[as.character(subData$index)] <- 1
indexArray[1] <- i
#######################
if (n == 1) {
res <- indexArray
} else {
# since indexArray is not a dataframe, use rbind instead of rbindlist
res <- rbind(res, indexArray)
}
message(n)
n <- n + 1
}
rownames(res) <- NULL
return(res)
}
c <- getIndex(a)
c
write.table(c, file, fileEncoding = 'UTF-8', sep = ',', row.names = F)
a <- read.table('clipboard', colClasses = 'character')
c <- getIndex(a)
write.table(c, file, fileEncoding = 'UTF-8', sep = ',', row.names = F)
getIndex(600027)
getIndex(002202)
getIndex('002202')
#' get a company's market cap, data comes from NetEase
#'
#' @param indexPool a pool of different index, special format for gfer
#' @importFrom data.table rbindlist
#' @return A data table with companies total capitalization and market capitalization
#'
#'
getIndexConstnt <- function(indexPool) {
for (i in 1:nrow(indexPool)) {
url <- as.character(indexPool[i, 2])
# index information comes from 2 different source by now, so it needs to
# detect wether it's from sina or etnet
if (grepl('sina.com', url)) {
listNum <- 4
} else if (grepl('etnet.com', url)){
listNum <- 1
} else break ('Wrong url in indexPool')
data <- html_table(read_html(url), fill = TRUE)[[listNum]][, 1:2]
data <- data[2:nrow(data), ]
data[,3] <- rep(indexPool[i,1], nrow(data))
colnames(data) <- c('ticker', 'name', 'index')
rownames(data) <- NULL
if (i == 1) {
tData <- data
} else {
tData <- rbindlist(list(tData, data))
}
}
return(tData)
}
#' get a company's market cap, data comes from NetEase
#'
#' @param tickers ticker/sympol of a company
#' @importFrom data.table data.table :=
#' @return A data table with companies and which index they are included
#' @examples
#' \dontrun{
#' getIndex(600601)
#' }
#'
#'
getIndex <-function(tickers, indexData) {
if (!(is.data.frame(tickers)|is.numeric(tickers)|is.character(tickers))) warning('Your input better be a data.frame...')
n <- 1
for (i in tickers[[1]]) {
####################### assign to indexArray
indexArray <- rep(0, (length(indexPool$index) + 1))
names(indexArray) <-  c('ticker', as.character(indexPool$index))
subData <- with(indexData, {
indexData[ticker == i]
})
indexArray[as.character(subData$index)] <- 1
indexArray[1] <- i
#######################
if (n == 1) {
res <- indexArray
} else {
# since indexArray is not a dataframe, use rbind instead of rbindlist
res <- rbind(res, indexArray)
}
message(n)
n <- n + 1
}
rownames(res) <- NULL
return(res)
}
getIndexData <- function(){
#creat an index pool
indexPool <- data.frame(index = c('CSI_100', 'SSE_50', 'CSI_300', 'SSE_Central_SOEs_50',
'HSI', 'HSCEI'),
url = c('http://vip.stock.finance.sina.com.cn/corp/go.php/vII_NewestComponent/indexid/000903.phtml',
'http://vip.stock.finance.sina.com.cn/corp/go.php/vII_NewestComponent/indexid/000016.phtml',
'http://vip.stock.finance.sina.com.cn/corp/go.php/vII_NewestComponent/indexid/000300.phtml',
'http://vip.stock.finance.sina.com.cn/corp/go.php/vII_NewestComponent/indexid/000042.phtml',
'https://www.etnet.com.hk/www/tc/stocks/indexes_detail.php?subtype=HSI',
'https://www.etnet.com.hk/www/tc/stocks/indexes_detail.php?subtype=CEI'
)
)
indexData <- getIndexConstnt(indexPool)
return(indexData)
}
indexData <- getIndexData()
getIndex('002202', indexData)
str(indexData)
indexData
unique(indexData$index)
as.character(unique(indexData$index))
#' get a company's market cap, data comes from NetEase
#'
#' @param indexPool a pool of different index, special format for gfer
#' @importFrom data.table rbindlist
#' @return A data table with companies total capitalization and market capitalization
#'
#'
getIndexConstnt <- function(indexPool) {
for (i in 1:nrow(indexPool)) {
url <- as.character(indexPool[i, 2])
# index information comes from 2 different source by now, so it needs to
# detect wether it's from sina or etnet
if (grepl('sina.com', url)) {
listNum <- 4
} else if (grepl('etnet.com', url)){
listNum <- 1
} else break ('Wrong url in indexPool')
data <- html_table(read_html(url), fill = TRUE)[[listNum]][, 1:2]
data <- data[2:nrow(data), ]
data[,3] <- rep(indexPool[i,1], nrow(data))
colnames(data) <- c('ticker', 'name', 'index')
rownames(data) <- NULL
if (i == 1) {
tData <- data
} else {
tData <- rbindlist(list(tData, data))
}
}
return(tData)
}
#' get a company's market cap, data comes from NetEase
#'
#' @param tickers ticker/sympol of a company
#' @importFrom data.table data.table :=
#' @return A data table with companies and which index they are included
#' @examples
#' \dontrun{
#' getIndex(600601)
#' }
#'
#'
getIndex <-function(tickers, indexData) {
if (!(is.data.frame(tickers)|is.numeric(tickers)|is.character(tickers))) warning('Your input better be a data.frame...')
n <- 1
for (i in tickers[[1]]) {
####################### assign to indexArray
indexArray <- rep(0, (length(indexPool$index) + 1))
names(indexArray) <-  c('ticker', as.character(unique(indexData$index)))
subData <- with(indexData, {
indexData[ticker == i]
})
indexArray[as.character(subData$index)] <- 1
indexArray[1] <- i
#######################
if (n == 1) {
res <- indexArray
} else {
# since indexArray is not a dataframe, use rbind instead of rbindlist
res <- rbind(res, indexArray)
}
message(n)
n <- n + 1
}
rownames(res) <- NULL
return(res)
}
getIndexData <- function(){
#creat an index pool
indexPool <- data.frame(index = c('CSI_100', 'SSE_50', 'CSI_300', 'SSE_Central_SOEs_50',
'HSI', 'HSCEI'),
url = c('http://vip.stock.finance.sina.com.cn/corp/go.php/vII_NewestComponent/indexid/000903.phtml',
'http://vip.stock.finance.sina.com.cn/corp/go.php/vII_NewestComponent/indexid/000016.phtml',
'http://vip.stock.finance.sina.com.cn/corp/go.php/vII_NewestComponent/indexid/000300.phtml',
'http://vip.stock.finance.sina.com.cn/corp/go.php/vII_NewestComponent/indexid/000042.phtml',
'https://www.etnet.com.hk/www/tc/stocks/indexes_detail.php?subtype=HSI',
'https://www.etnet.com.hk/www/tc/stocks/indexes_detail.php?subtype=CEI'
)
)
indexData <- getIndexConstnt(indexPool)
return(indexData)
}
getIndex('002202', indexData)
unique(indexData$index)
length(unique(indexData$index))
#' get a company's market cap, data comes from NetEase
#'
#' @param indexPool a pool of different index, special format for gfer
#' @importFrom data.table rbindlist
#' @return A data table with companies total capitalization and market capitalization
#'
#'
getIndexConstnt <- function(indexPool) {
for (i in 1:nrow(indexPool)) {
url <- as.character(indexPool[i, 2])
# index information comes from 2 different source by now, so it needs to
# detect wether it's from sina or etnet
if (grepl('sina.com', url)) {
listNum <- 4
} else if (grepl('etnet.com', url)){
listNum <- 1
} else break ('Wrong url in indexPool')
data <- html_table(read_html(url), fill = TRUE)[[listNum]][, 1:2]
data <- data[2:nrow(data), ]
data[,3] <- rep(indexPool[i,1], nrow(data))
colnames(data) <- c('ticker', 'name', 'index')
rownames(data) <- NULL
if (i == 1) {
tData <- data
} else {
tData <- rbindlist(list(tData, data))
}
}
return(tData)
}
#' get a company's market cap, data comes from NetEase
#'
#' @param tickers ticker/sympol of a company
#' @importFrom data.table data.table :=
#' @return A data table with companies and which index they are included
#' @examples
#' \dontrun{
#' getIndex(600601)
#' }
#'
#'
getIndex <-function(tickers, indexData) {
if (!(is.data.frame(tickers)|is.numeric(tickers)|is.character(tickers))) warning('Your input better be a data.frame...')
n <- 1
for (i in tickers[[1]]) {
####################### assign to indexArray
indexArray <- rep(0, (length(unique(indexData$index)) + 1))
names(indexArray) <-  c('ticker', as.character(unique(indexData$index)))
subData <- with(indexData, {
indexData[ticker == i]
})
indexArray[as.character(subData$index)] <- 1
indexArray[1] <- i
#######################
if (n == 1) {
res <- indexArray
} else {
# since indexArray is not a dataframe, use rbind instead of rbindlist
res <- rbind(res, indexArray)
}
message(n)
n <- n + 1
}
rownames(res) <- NULL
return(res)
}
getIndexData <- function(){
#creat an index pool
indexPool <- data.frame(index = c('CSI_100', 'SSE_50', 'CSI_300', 'SSE_Central_SOEs_50',
'HSI', 'HSCEI'),
url = c('http://vip.stock.finance.sina.com.cn/corp/go.php/vII_NewestComponent/indexid/000903.phtml',
'http://vip.stock.finance.sina.com.cn/corp/go.php/vII_NewestComponent/indexid/000016.phtml',
'http://vip.stock.finance.sina.com.cn/corp/go.php/vII_NewestComponent/indexid/000300.phtml',
'http://vip.stock.finance.sina.com.cn/corp/go.php/vII_NewestComponent/indexid/000042.phtml',
'https://www.etnet.com.hk/www/tc/stocks/indexes_detail.php?subtype=HSI',
'https://www.etnet.com.hk/www/tc/stocks/indexes_detail.php?subtype=CEI'
)
)
indexData <- getIndexConstnt(indexPool)
return(indexData)
}
getIndex('002202', indexData)
getIndex('00902', indexData)
getIndex('00991', indexData)
getIndex('600188', indexData)
getIndex('601898', indexData)
getIndex('601088', indexData)
getIndex('01088', indexData)
getIndex('900948', indexData)
getIndex('601717', indexData)
a <- read.table('clipboard', colClasses = 'character')
a
b <- getTickers(a)
write.table(b, file, fileEncoding = 'UTF-8', sep = ',', row.names = F)
a
a <- read.table('clipboard', colClasses = 'character')
a
as.character(a)
is.numeric(a)
is.factor(a)
a
c <- getIndex(a, indexData)
c
write.table(c, file, fileEncoding = 'UTF-8', sep = ',', row.names = F)
a <- read.table('clipboard', colClasses = 'character')
a
b <- getTickers(a)
write.table(b, file, fileEncoding = 'UTF-8', sep = ',', row.names = F)
a <- read.table('clipboard', colClasses = 'character')
a
c <- getIndex(a, indexData)
write.table(c, file, fileEncoding = 'UTF-8', sep = ',', row.names = F)
devtools::check()
install.packages('V8')
devtools::check()
devtools::document()
devtools::document()
devtools::document()
devtools::check()
getIndex('02238', indexData)
getIndex('601633', indexData)
getIndex('01211', indexData)
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
url <- 'http://stockdata.stock.hexun.com/zrbg/data/zrbList.aspx?'
data <- '2015-12-31'
date <- '2015-12-31'
proxy <- NULL
res <- GET(url, query = list(date = date,
count = 20,
pname = 20,
titType = 'null',
page = page), use_proxy(proxy[1, 1], proxy[1, 2]), timeout(15))
library(httr)
res <- GET(url, query = list(date = date,
count = 20,
pname = 20,
titType = 'null',
page = page), use_proxy(proxy[1, 1], proxy[1, 2]), timeout(15))
res
url
page <- 3
res <- GET(url, query = list(date = date,
count = 20,
pname = 20,
titType = 'null',
page = page), use_proxy(proxy[1, 1], proxy[1, 2]), timeout(15))
res
b <- content(res)
b
library(stringi)
c <- stri_replace_first_fixed('hxbase_json1({sum:3165,', '{')
c <- stri_replace_first_fixed(b, 'hxbase_json1({sum:3165,', '{')
c
tail(c)
b
d <- stri_replace_last_fixed(c, ")", "")
d
fromJSON(d)
library(jsonlite)
fromJSON(d)
c
b
c <- stri_replace_first_fixed(b, 'hxbase_json1({sum:3165,list', '\"list\"')
c
d <- paste('{', c, '}', sep = '')
d
fromJSON(d)
stockName <- 600601
url1 <- 'http://so.hexun.com/ajax.do?key='
url2 <- '&type=all?math=0.6109926008061326'
url <- paste(url1, stockName, url2, sep = '')
res <- content(GET(url), as = 'text') %>%
stri_replace_first_fixed("hxSuggest_JsonData=", "\"list\":")
library(rvest)
res <- content(GET(url), as = 'text') %>%
stri_replace_first_fixed("hxSuggest_JsonData=", "\"list\":")
res
a
b
library(devtools)
devtools::install_github('Yuanchao-Xu/gfer')
library(gfer)
a <- read.table('clipboard')
?read.table
a <- read.table('clipboard', colClasses = 'character')
a
b <- getTickers(a)
file <- file.choose()
write.table(b, file)
write.table(b, file, row.names = F)
write.table(b, file, row.names = F, sep = ',')
a <- read.table('clipboard', colClasses = 'character')
a
c <- getIndex(a)
devtools::install_github('Yuanchao-Xu/gfer')
c <- getIndex(a)
library(gfer)
c <- getIndex(a)
gfer::getIndex
devtools::document
devtools::document()
devtools::install_github('Yuanchao-Xu/gfer')
library(gfer)
c <- getIndex(a)
a <- read.table('clipboard', colClasses = 'character')
c <- getIndex(a)
indexData <- getIndexData()
c <- getIndex(a, indexData)
c
write.table(c, file, row.names = F, sep = ',')
c
write.table(c, file, row.names = F, sep = ',')
file <- file.choose()
write.table(c, file, row.names = F, sep = ',')
as.character(0563)
getIndex('0836', indexData)
getIndex('0386', indexData)
getIndex('00386', indexData)
getIndex('601808', indexData)
getIndex('02883', indexData)
getIndex('00857', indexData)
a <- read.table('clipboard', colClasses = 'character')
b <- getTickers(a)
write.table(b, file, row.names = F, sep = ',')
a <- read.table('clipboard', colClasses = 'character')
a
c <- getIndex(a, indexData)
write.table(c, file, row.names = F, sep = ',')
getIndex('0034', indexData)
getIndex('00347', indexData)
getIndex('600362', indexData)
getIndex('600808', indexData)
getIndex('00323', indexData)
getIndex('601600', indexData)
getIndex('02600', indexData)
getIndex('601618', indexData)
getIndex('601005', indexData)
getIndex('601899', indexData)
a <- read.table('clipboard', colClasses = 'character')
file
a <- read.table('clipboard', colClasses = 'character')
a
a
b <- getHisMktCap(a, 20151203, 20151203)
b
write.table(b, file, row.names = F, sep = ',')
b <- getHisMktCap(600900, 20151203, 20151203)
getHisMktCap(600900, 20151203, 20151203)
getHisMktCap(600900, 20161203, 20161203)
getHisMktCap(600900, 20161204, 20161204)
getHisMktCap(600900, 20161205, 20161205)
getHisMktCap(000027, 20161205, 20161205)
getHisMktCap('000027', 20161205, 20161205)
a <- read.table('clipboard', colClasses = 'character')
a
b <- getHisMktCap(a, 20151203, 20151203)
x <- 00568
x
b
write.table(b, file, row.names = F, sep = ',')
a <- read.table('clipboard', colClasses = 'character')
a
b <- getHisMktCap(a, 20151203, 20151203)
write.table(b, file, row.names = F, sep = ',')
getHisMktCap('000061', 20161205, 20161205)
getHisMktCap('002299', 20161205, 20161205)
a <- read.table('clipboard', colClasses = 'character')
a
b <- getHisMktCap(a, 20151203, 20151203)
b
write.table(b, file, row.names = F, sep = ',')
getHisMktCap('000625', 20161205, 20161205)
getHisMktCap('000800', 20161205, 20161205)
a <- read.table('clipboard', colClasses = 'character')
b <- getHisMktCap(a, 20151203, 20151203)
write.table(b, file, row.names = F, sep = ',')
a <- read.table('clipboard', colClasses = 'character')
a
b <- getHisMktCap(a, 20151203, 20151203)
write.table(b, file, row.names = F, sep = ',')
getHisMktCap('00001', 20151203, 20151203)
getHisMktCap('1000695', 20151203, 20151203)
getHisMktCap('1002110', 20151203, 20151203)
getHisMktCap('2110', 20151203, 20151203)
ticker <- '001122'
substr(ticker,1)
substr(ticker,1,1)
substr(ticker,1,1) == 0
substr(ticker,1,1) == '0'
devtools::document()
devtools::check()
