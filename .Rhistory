#layer_legend <- geom_scatterpie_legend(data$radius, x= 0, y=0)
if (xmeanLine == TRUE) layer_basic <- layer_basic + geom_vline(xintercept = mean(data$x), color = 'red', size = 1.5, linetype = 2)
if (ymeanLine == TRUE) layer_basic <- layer_basic + geom_hline(yintercept = mean(data$y), color = 'red', size = 1.5, linetype = 2)
layer_plot <- layer_basic + layer_pie + layer_label + scale_fill_manual(values=pieColor) +
coord_equal() + ggstyle()
print(layer_plot)
})
layer_basic <- ggplot()
data$radius <- getRadius(data$r)
layer_pie <- geom_scatterpie(data = data, aes(x, y, r = radius),
cols = colnames(data)[pieRange], color = NA)
layer_pie
layer_pie()
layer_basic + layer_pie
layer_basic + layer_pie + coord_equal()
layer_label <- geom_text_repel(data = data, aes(x, y, label = label),
point.padding = unit(labelLine, "lines"))
if (is.null(labelLine)) labelLine <- max(data$radius)/3
layer_label <- geom_text_repel(data = data, aes(x, y, label = label),
point.padding = unit(labelLine, "lines"))
if (xmeanLine == TRUE) layer_basic <- layer_basic + geom_vline(xintercept = mean(data$x), color = 'red', size = 1.5, linetype = 2)
if (ymeanLine == TRUE) layer_basic <- layer_basic + geom_hline(yintercept = mean(data$y), color = 'red', size = 1.5, linetype = 2)
layer_plot <- layer_basic + layer_pie + layer_label + scale_fill_manual(values=pieColor) +
coord_equal() + ggstyle()
print(layer_plot)
if (!is.null(pieColor)) layer_basic <- layer_basic + scale_fill_manual(values=pieColor)
layer_plot <- layer_basic + layer_pie + layer_label  +
coord_equal() + ggstyle()
print(layer_plot)
GDPColor_CWR <- c("#6B8033", "#020303", "#0D77B9")
if (!is.null(pieColor)) layer_basic <- layer_basic + scale_fill_manual(values=pieColor)
layer_plot <- layer_basic + layer_pie + layer_label  +
coord_equal() + ggstyle()
print(layer_plot)
!is.null(pieColor)
pieColor
pieColor = GDPColor_CWR
if (!is.null(pieColor)) layer_basic <- layer_basic + scale_fill_manual(values=pieColor)
layer_plot <- layer_basic + layer_pie + layer_label  +
coord_equal() + ggstyle()
print(layer_plot)
layer_plot <- layer_basic + layer_pie + layer_label  +
coord_equal() + ggstyle() +
scale_x_continuous(labels = data$x1)
print(layer_plot)
layer_plot <- layer_basic + layer_pie + layer_label  +
coord_equal() + ggstyle()
print(layer_plot)
25/ratio
xlim
?trans_new
trans_new('trans', function(x) x/ratio, identity)
library(scales)
trans_new('trans', function(x) x/ratio, identity)
layer_plot <- layer_basic + layer_pie + layer_label  +
coord_equal() + ggstyle() +
scale_y_continuous(trans = trans)
layer_plot <- layer_basic + layer_pie + layer_label  +
coord_equal() + ggstyle() +
scale_y_continuous(trans = 'trans')
trans_trans <- function() {
trans_new('trans', function(x) x/ratio, identity)
}
layer_plot <- layer_basic + layer_pie + layer_label  +
coord_equal() + ggstyle() +
scale_y_continuous(trans = 'trans')
print(layer_plot)
layer_plot <- layer_basic + layer_pie + layer_label  +
coord_equal() + ggstyle() +
scale_x_continuous(trans = 'trans')
print(layer_plot)
ratio
trans_trans <- function() {
trans_new('trans', function(x) x/ratio)
}
layer_plot <- layer_basic + layer_pie + layer_label  +
coord_equal() + ggstyle() +
scale_x_continuous(trans = 'trans')
trans_trans <- function(ratio) {
trans_new('trans',
transform = function(x) {
y <- x/ratio
return(y)
},
inverse = function(y) {
x <- y * ratio
return(x)
})
}
layer_plot <- layer_basic + layer_pie + layer_label  +
coord_equal() + ggstyle() +
scale_x_continuous(trans = trans_trans(ratio))
print(layer_plot)
trans_trans <- function(ratio) {
trans_new('trans',
transform = function(x) {
y <- x * ratio
return(y)
},
inverse = function(y) {
x <- y / ratio
return(x)
})
}
layer_plot <- layer_basic + layer_pie + layer_label  +
coord_equal() + ggstyle() +
scale_x_continuous(trans = trans_trans(ratio))
print(layer_plot)
trans_trans <- function(ratio) {
trans_new('trans',
transform = function(x) {
y <- x / ratio
return(y)
},
inverse = function(y) {
x <- y * ratio
return(x)
})
}
layer_plot <- layer_basic + layer_pie + layer_label  +
coord_equal() + ggstyle() +
scale_x_continuous(trans = trans_trans(ratio))
print(layer_plot)
layer_plot <- layer_basic + layer_pie + layer_label  +
coord_equal() + ggstyle() +
scale_x_continuous(trans = trans_trans(ratio)) + theme(aspect.ratio = 0.75)
print(layer_plot)
layer_plot <- layer_basic + layer_pie + layer_label  +
coord_equal() + ggstyle() +
scale_x_continuous(trans = trans_trans(ratio))
print(layer_plot)
layer_label <- geom_text_repel(data = data, aes(x, y, label = label),
point.padding = unit(labelLine, "lines")) + scale_x_continuous(trans = trans_trans(ratio))
layer_label <- geom_text_repel(data = data, aes(x, y, label = label),
point.padding = unit(labelLine, "lines")) + scale_x_continuous(trans = trans_trans(ratio))
layer_plot <- layer_basic + layer_pie + layer_label  +
coord_equal() + ggstyle()
print(layer_plot)
i <- max(data$x) - min(data$x)
i
i <- max(data$x1) - min(data$x1)
i
i*ratio
i <- (max(data$x1) - min(data$x1))/5
i
data$x <- data$x1
data$x
trans_trans <- function(ratio) {
trans_new('trans',
transform = function(x) {
y <- x / ratio
return(y)
},
inverse = function(y) {
x <- y * ratio
return(x)
})
}
layer_basic <- ggplot()
layer_pie <- geom_scatterpie(data = data, aes(x, y, r = radius),
cols = colnames(data)[pieRange], color = NA)
layer_label <- geom_text_repel(data = data, aes(x, y, label = label),
point.padding = unit(labelLine, "lines"))
if (xmeanLine == TRUE) layer_basic <- layer_basic + geom_vline(xintercept = mean(data$x), color = 'red', size = 1.5, linetype = 2)
if (ymeanLine == TRUE) layer_basic <- layer_basic + geom_hline(yintercept = mean(data$y), color = 'red', size = 1.5, linetype = 2)
if (!is.null(pieColor)) layer_basic <- layer_basic + scale_fill_manual(values=pieColor)
layer_plot <- layer_basic + layer_pie + layer_label  +
coord_equal() + ggstyle() +
scale_x_continuous(trans = trans_trans(ratio))
print(layer_plot)
trans_trans <- function(ratio) {
trans_new('trans',
transform = function(x) {
y <- x * ratio
return(y)
},
inverse = function(y) {
x <- y / ratio
return(x)
})
}
data$x <- data$x1 * ratio
layer_pie <- geom_scatterpie(data = data, aes(x, y, r = radius),
cols = colnames(data)[pieRange], color = NA)
if (is.null(labelLine)) labelLine <- max(data$radius)/3
layer_label <- geom_text_repel(data = data, aes(x, y, label = label),
point.padding = unit(labelLine, "lines"))
if (xmeanLine == TRUE) layer_basic <- layer_basic + geom_vline(xintercept = mean(data$x), color = 'red', size = 1.5, linetype = 2)
if (ymeanLine == TRUE) layer_basic <- layer_basic + geom_hline(yintercept = mean(data$y), color = 'red', size = 1.5, linetype = 2)
if (!is.null(pieColor)) layer_basic <- layer_basic + scale_fill_manual(values=pieColor)
layer_plot <- layer_basic + layer_pie + layer_label  +
coord_equal() + ggstyle() +
scale_x_continuous(trans = trans_trans(ratio))
print(layer_plot)
data$x
data$x1
layer_plot <- layer_basic + layer_pie + layer_label  +
coord_equal() + ggstyle()
print(layer_plot)
layer_basic <- ggplot()
layer_pie <- geom_scatterpie(data = data, aes(x, y, r = radius),
cols = colnames(data)[pieRange], color = NA)
if (is.null(labelLine)) labelLine <- max(data$radius)/3
layer_label <- geom_text_repel(data = data, aes(x, y, label = label),
point.padding = unit(labelLine, "lines"))
if (xmeanLine == TRUE) layer_basic <- layer_basic + geom_vline(xintercept = mean(data$x), color = 'red', size = 1.5, linetype = 2)
if (ymeanLine == TRUE) layer_basic <- layer_basic + geom_hline(yintercept = mean(data$y), color = 'red', size = 1.5, linetype = 2)
if (!is.null(pieColor)) layer_basic <- layer_basic + scale_fill_manual(values=pieColor)
layer_plot <- layer_basic + layer_pie + layer_label  +
coord_equal() + ggstyle()
print(layer_plot)
data$x <- data$x1
data$x
layer_basic <- ggplot()
layer_pie <- geom_scatterpie(data = data, aes(x, y, r = radius),
cols = colnames(data)[pieRange], color = NA)
if (is.null(labelLine)) labelLine <- max(data$radius)/3
layer_label <- geom_text_repel(data = data, aes(x, y, label = label),
point.padding = unit(labelLine, "lines"))
if (xmeanLine == TRUE) layer_basic <- layer_basic + geom_vline(xintercept = mean(data$x), color = 'red', size = 1.5, linetype = 2)
if (ymeanLine == TRUE) layer_basic <- layer_basic + geom_hline(yintercept = mean(data$y), color = 'red', size = 1.5, linetype = 2)
if (!is.null(pieColor)) layer_basic <- layer_basic + scale_fill_manual(values=pieColor)
layer_plot <- layer_basic + layer_pie + layer_label  +
coord_equal() + ggstyle() +
scale_x_continuous(trans = trans_trans(ratio))
print(layer_plot)
ratio
layer_plot <- layer_basic + layer_pie + layer_label  +
coord_equal() + ggstyle() +
scale_x_continuous(trans = trans_trans(15))
print(layer_plot)
layer_label <- geom_text_repel(data = data, aes(x, y, label = label),
point.padding = unit(labelLine, "lines")) + scale_x_continuous(trans = trans_trans(15))
layer_basic <- ggplot()
geom_point(data = data, aes(x, y))
layer_pie <- geom_scatterpie(data = data, aes(x, y, r = radius),
cols = colnames(data)[pieRange], color = NA)
layer_label <- geom_text_repel(data = data, aes(x, y, label = label),
point.padding = unit(labelLine, "lines"))
layer_plot <- layer_basic + layer_pie + layer_label  +
coord_equal() + ggstyle() +
scale_x_continuous(trans = trans_trans(15))
print(layer_plot)
layer_basic <- ggplot()
geom_point(data = data, aes(x, y))
layer_basic
layer_basic <- ggplot() +
geom_point(data = data, aes(x, y))
layer_plot <- layer_basic + layer_pie + layer_label  +
coord_equal() + ggstyle() +
scale_x_continuous(trans = trans_trans(15))
print(layer_plot)
layer_basic <- ggplot(aes(x = x)) +
geom_point(data = data, aes(x, y))
layer_basic <- ggplot(data, aes(x = x)) +
geom_point(data = data, aes(x, y))
layer_pie <- geom_scatterpie(data = data, aes(x, y, r = radius),
cols = colnames(data)[pieRange], color = NA)
if (is.null(labelLine)) labelLine <- max(data$radius)/3
layer_label <- geom_text_repel(data = data, aes(x, y, label = label),
point.padding = unit(labelLine, "lines"))
if (xmeanLine == TRUE) layer_basic <- layer_basic + geom_vline(xintercept = mean(data$x), color = 'red', size = 1.5, linetype = 2)
if (ymeanLine == TRUE) layer_basic <- layer_basic + geom_hline(yintercept = mean(data$y), color = 'red', size = 1.5, linetype = 2)
if (!is.null(pieColor)) layer_basic <- layer_basic + scale_fill_manual(values=pieColor)
layer_plot <- layer_basic + layer_pie + layer_label  +
coord_equal() + ggstyle() +
scale_x_continuous(trans = trans_trans(15))
print(layer_plot)
layer_pie <- geom_scatterpie(data = data, aes(x, y, r = radius),
cols = colnames(data)[pieRange], color = NA,
scale_x_continuous(trans = trans_trans(15)))
layer_plot <- layer_basic + layer_pie + layer_label  +
coord_equal() + ggstyle() +
scale_x_continuous(trans = trans_trans(15))
print(layer_plot)
layer_plot <- layer_basic + layer_pie + layer_label  +
coord_equal() + ggstyle()
print(layer_plot)
ggplot() + layer_pie()
ggplot() + layer_pie
layer_pie <- geom_scatterpie(data = data, aes(x, y, r = radius),
cols = colnames(data)[pieRange], color = NA)
ggplot() + layer_pie
ggplot() + layer_pie + scale_x_continuous(trans = trans_trans(15))
trans_trans
trans_trans(15)
ggplot() + layer_pie + scale_x_continuous(trans = trans_trans(5))
ggplot() + layer_pie + scale_x_continuous(trans = trans_trans(0.5))
ggplot() + layer_pie + scale_x_continuous(trans = trans_trans(0.5)) + coord_equal()
data$x <- data$x1 * ratio
layer_basic <- ggplot(data, aes(x = x)) +
geom_point(data = data, aes(x, y))
layer_basic <- ggplot(data, aes(x = x))
layer_pie <- geom_scatterpie(data = data, aes(x, y, r = radius),
cols = colnames(data)[pieRange], color = NA)
if (is.null(labelLine)) labelLine <- max(data$radius)/3
layer_label <- geom_text_repel(data = data, aes(x, y, label = label),
point.padding = unit(labelLine, "lines"))
if (ymeanLine == TRUE) layer_basic <- layer_basic + geom_hline(yintercept = mean(data$y), color = 'red', size = 1.5, linetype = 2)
if (!is.null(pieColor)) layer_basic <- layer_basic + scale_fill_manual(values=pieColor)
if (xmeanLine == TRUE) layer_basic <- layer_basic + geom_vline(xintercept = mean(data$x), color = 'red', size = 1.5, linetype = 2)
layer_plot <- layer_basic + layer_pie + layer_label  +
coord_equal() + ggstyle() +
scale_x_continuous(trans = trans_trans(15))
layer_plot <- layer_basic + layer_pie + layer_label  +
coord_equal() + ggstyle()
scale_x_continuous()
print(layer_plot)
i
x <- c(1.2, 1.6)
round(x)
seq(0, 1, length.out = 11)
labels <- seq(min(data$x1), max(data$x1), length.out = 5)
labels
labels <- round(seq(min(data$x1), max(data$x1), length.out = 5))
breaks <- labels * ratio
breaks
labels
layer_plot <- layer_basic + layer_pie + layer_label  +
coord_equal() + ggstyle()
scale_x_continuous(breaks = breaks, labels = labels)
layer_plot <- layer_basic + layer_pie + layer_label  +
coord_equal() + ggstyle() +
scale_x_continuous(breaks = breaks, labels = labels)
print(layer_plot)
seq(min(data$x1), max(data$x1), length.out = 5)
i
i <- round((max(data$x1) - min(data$x1))/5)
seq(1, 9, by = 2)
seq(1, by = 2, length.out = 5)
seq(1, by = 2, length.out = 6)
labels <- seq(ceiling(min(data$x1)), by = i, length.out = 5))
labels <- seq(ceiling(min(data$x1)), by = i, length.out = 5)
labels
i <- round((max(data$x1) - min(data$x1))/5)
labels <- seq(ceiling(min(data$x1)), by = i, length.out = 6)
breaks <- labels * ratio
layer_plot <- layer_basic + layer_pie + layer_label  +
coord_equal() + ggstyle() +
scale_x_continuous(breaks = breaks, labels = labels)
print(layer_plot)
ceiling(min(data$x1))
min(data$x1)
max(data$x1)
i <- ceilling((max(data$x1) - min(data$x1))/5)
i <- ceiling((max(data$x1) - min(data$x1))/5)
i
labels <- seq(ceiling(min(data$x1)), by = i, length.out = 5)
breaks <- labels * ratio
layer_plot <- layer_basic + layer_pie + layer_label  +
coord_equal() + ggstyle() +
scale_x_continuous(breaks = breaks, labels = labels)
print(layer_plot)
i <- round((max(data$x1) - min(data$x1))/5)
i <- (max(data$x1) - min(data$x1))/5
(max(data$x1) - min(data$x1))/i_adj
i_adj <- round(i)
(max(data$x1) - min(data$x1))/i_adj
n <- ifelse((max(data$x1) - min(data$x1))/i >= 5, 6, 5)
n
devtools::check(cran = T)
devtools::document()
devtools::document()
devtools::check(cran = T)
devtools::document()
devtools::document()
devtools::document()
devtools::check(cran = T)
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::check(cran = T)
devtools::check(cran = T)
devtools::check(cran = T)
devtools::check(cran = T)
devtools::check(cran = T)
devtools::check(cran = T)
install.packages('googlesheets')
install.packages('gsheet')
devtools::check(cran = T)
devtools::check(cran = T)
shiny::runApp('C:/Users/user/Google Drive/CWR/R/Provincial_waternomics')
runApp('C:/Users/user/Google Drive/CWR/R/Provincial_waternomics')
updataNBS(2014, 2015)
library(gfer)
updataNBS(2014, 2015)
devtools::check(cran = T)
updataNBS(2014, 2015)
devtools::install_github("Yuanchao-Xu/gfer")
shiny::runApp('C:/Users/user/Google Drive/CWR/R/Provincial_waternomics')
runApp('C:/Users/user/Google Drive/CWR/R/getPPPList')
runApp('C:/Users/user/Google Drive/CWR/R/getPPPList')
library(gfer)
updataNBS(2014, 2015)
updateNBS(2014, 2015)
updateNBS(2014, 2015)
a <- getWaternomicsData(2014, 2015)
a <- getWaternomicsData(2014, 2015)
debug(updateNBS)
debug(updateNBS)
updateNBS(2014, 2015)
updateNBS(2014, 2015)
!"NBS_data" %in% gs_ls()[, "sheet_title"]
gs_ls()[, "sheet_title"]
"NBS_data" %in% gs_ls()[, "sheet_title"]
"NBS_data" %in% gs_ls()[, "sheet_title"][1]
"NBS_data" %in% gs_ls()[, "sheet_title"][,1]
str(gs_ls()[, "sheet_title"])
gs_ls()[["sheet_title"]]
"NBS_data" %in% gs_ls()[["sheet_title"]]
devtools::check(cran = T)
updateNBS(2014, 2015)
devtools::check(cran = T)
updateNBS(2014, 2015)
res <- getWaternomicsData(2014, 2015)
devtools::check(cran = T)
res <- getWaternomicsData(2014, 2015)
debug(getWaternomicsData)
res <- getWaternomicsData(2014, 2015)
GDP
GDP
wateruse
devtools::check(cran = T)
res <- getWaternomicsData(2014, 2015)
devtools::check(cran = T)
devtools::check(cran = T)
devtools::check(cran = T)
res <- getWaternomicsData(2014, 2015)
debug(getWaternomicsData)
res <- getWaternomicsData(2014, 2015)
str(res)
res[, x := res[, 8]/res[, 3]]
is.data.table(res)
library(data.table)
is.data.table(res)
str(res)
devtools::check(cran = T)
res <- getWaternomicsData(2014, 2015)
str(res)
GDPColor_CWR <- c("#6B8033", "#020303", "#0D77B9")
plotScatterPie(GDPmix, pieRange = 4:6, pieColor = GDPColor_CWR)
plotScatterPie(res, pieRange = 4:6, pieColor = GDPColor_CWR)
plotScatterPie(res[1:7], pieRange = 4:6, pieColor = GDPColor_CWR)
plotScatterPie(res[1:7,], pieRange = 4:6, pieColor = GDPColor_CWR)
devtools::check(cran = T)
debug(plotScatterPie)
plotScatterPie(res[1:7,], pieRange = 4:6, pieColor = GDPColor_CWR)
i
devtools::check(cran = T)
plotScatterPie(res[1:7,], pieRange = 4:6, pieColor = GDPColor_CWR)
plotScatterPie(res[15:23,], pieRange = 4:6, pieColor = GDPColor_CWR)
devtools::check(cran = T)
plotScatterPie(res[15:23,], pieRange = 4:6, pieColor = GDPColor_CWR)
plotScatterPie(res[15:23,], pieRange = 4:6, pieColor = GDPColor_CWR)
devtools::check(cran = T)
plotScatterPie(res[15:23,], pieRange = 4:6, pieColor = GDPColor_CWR)
shiny::runApp('C:/Users/user/Google Drive/CWR/R/Provincial_waternomics')
plotScatterPie(res[15:23,], pieRange = 4:6, pieColor = GDPColor_CWR)
devtools::install_github('Yuanchao-Xu/gfer')
runApp('C:/Users/user/Google Drive/CWR/R/Provincial_waternomics')
plotScatterPie(res[15:23,], pieRange = 4:6, pieColor = GDPColor_CWR)
library(gfer)
plotScatterPie(res[15:23,], pieRange = 4:6, pieColor = GDPColor_CWR)
shiny::runApp('C:/Users/user/Google Drive/CWR/R/Provincial_waternomics')
runApp('C:/Users/user/Google Drive/CWR/R/Provincial_waternomics')
runApp('C:/Users/user/Google Drive/CWR/R/Provincial_waternomics')
runApp('C:/Users/user/Google Drive/CWR/R/Provincial_waternomics')
res
input$province
input$province
a
runApp('C:/Users/user/Google Drive/CWR/R/Provincial_waternomics')
plot(1:5)
runApp('C:/Users/user/Google Drive/CWR/R/Provincial_waternomics')
runApp('C:/Users/user/Google Drive/CWR/R/Provincial_waternomics')
runApp('C:/Users/user/Google Drive/CWR/R/Provincial_waternomics')
runApp('C:/Users/user/Google Drive/CWR/R/getPPPList')
runApp('C:/Users/user/Google Drive/CWR/R/Provincial_waternomics')
runApp('C:/Users/user/Google Drive/CWR/R/Provincial_waternomics')
runApp('C:/Users/user/Google Drive/CWR/R/Provincial_waternomics')
res
plotYear
input$plotYear
runApp('C:/Users/user/Google Drive/CWR/R/Provincial_waternomics')
runApp('C:/Users/user/Google Drive/CWR/R/Provincial_waternomics')
devtools::check(cran = T)
runApp('C:/Users/user/Google Drive/CWR/R/Provincial_waternomics')
debug(plotScatterPie)
runApp('C:/Users/user/Google Drive/CWR/R/Provincial_waternomics')
data
str(data)
runApp('C:/Users/user/Google Drive/CWR/R/Provincial_waternomics')
a
data()
runApp()
runApp('C:/Users/user/Google Drive/CWR/R/Provincial_waternomics')
a
data()
a
runApp('C:/Users/user/Google Drive/CWR/R/Provincial_waternomics')
res
runApp('C:/Users/user/Google Drive/CWR/R/Provincial_waternomics')
a
res
province
runApp('C:/Users/user/Google Drive/CWR/R/Provincial_waternomics')
input$plotYear
input$province
data
runApp('C:/Users/user/Google Drive/CWR/R/Provincial_waternomics')
res$Year
