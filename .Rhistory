col <- c(rgb(107/255, 128/255, 51/255), rgb(2/255, 3/255, 3/255), rgb(13/255, 119/255, 185/255))
for (i in 1:3) {
add.pie(x = x[i], y = y[i], z = c(1, 1, 1), radius = r[i], labels = '', col = col, border = 'white')
}
if (label == TRUE) {
size <- 1.2
text(-0.7, 8.5, "Service", col = 'white', cex = size)
text(0.7, 8.5, "Agriculture", col = 'white', cex = size)
text(0, 4, "Industry", col = 'white', cex = size)
}
}
getLim <- function(x) {
# decide axis interval
dig <- nchar(min(round(x)))
x1 <- round(min(x) - (max(x) - min(x))/length(x), -(dig - 1))
x2 <- round(max(x) + (max(x) - min(x))/length(x), -(dig - 1))
return(c(x1, x2))
}
# this is for setting plot radius
getRadius <- function(y, small = 1.5, medium = 3, large = 5) {
r <- sapply(y, function(x) {
if (x <= 40000 & x >= 15000) {
x <- medium
} else if (x < 15000) {
x <- small
} else {
x <- large
}
})
return (r)
}
plotWaternomics_legend()
devtools::document()
devtools::check(cran = T)
devtools::check(cran = T)
devtools::document()
devtools::check(cran = T)
devtools::document()
devtools::check(cran = T)
install.packages('treemap')
library(treemap)
group=c(rep("group-1",4),rep("group-2",2),rep("group-3",3))
group
data("GNI2014")
STR(GNI2014)
str(GNI2014)
data <- GDPmix
str(data)
treemap(data,
index('Province'),
vSize = 'GDP',
vColor = 'GDP',
type = 'value'
)
treemap(data,
index = 'Province',
vSize = 'GDP',
vColor = 'GDP',
type = 'value'
)
treemap(data,
index = 'Province',
vSize = 'GDP',
vColor = 'First',
type = 'value'
)
treemap(data,
index = c('Province','x'),
vSize = 'GDP',
vColor = 'First',
type = 'value'
)
treemap(data,
index = c('Province'),
vSize = 'GDP',
vColor = 'First',
type = 'value'
)
treemap(data,
index = c('Province'),
vSize = 'GDP',
vColor = 'First',
type = 'index'
)
treemap(data,
index = c('Province'),
vSize = 'GDP',
vColor = 'First',
type = 'color'
)
treemap(data,
index = c('Province'),
vSize = 'GDP',
vColor = 'First',
type = 'value'
)
group=c(rep("group-1",4),rep("group-2",2),rep("group-3",3))
subgroup=paste("subgroup" , c(1,2,3,4,1,2,1,2,3), sep="-")
value=c(13,5,22,12,11,7,3,1,23)
data1=data.frame(group,subgroup,value)
str(data1)
treemap(data, index=c("group","subgroup"),     vSize="value", type="index")
treemap(data, index=c("group","subgroup"),     vSize="value", type="index")
treemap(data, index=c("group","subgroup"), vSize="value", type="index")
treemap(data1, index=c("group","subgroup"), vSize="value", type="index")
treemap(data1, index=c("group","subgroup"), vSize="value", type="index")
treemap(data,
index = c('Province'),
vSize = 'GDP',
vColor = 'First',
type = 'value'
)
treemap(data,
index = c('Province'),
vSize = 'GDP',
vColor = 'First',
type = 'value'
)
treemap(data,
index = c('Province'),
vSize = 'GDP',
vColor = 'First',
type = 'value',
palette = 'Set1'
)
treemap(data, index=c("group","subgroup"), vSize="value",
type="index",                            # How you color the treemap. type help(treemap) for more info
palette = "Set1",                        # Select your color palette from the RColorBrewer presets or make your own.
title="My Treemap",                      # Customize your title
fontsize.title=12,                       # Size of the title
)
treemap(data1, index=c("group","subgroup"), vSize="value",
type="index",                            # How you color the treemap. type help(treemap) for more info
palette = "Set1",                        # Select your color palette from the RColorBrewer presets or make your own.
title="My Treemap",                      # Customize your title
fontsize.title=12,                       # Size of the title
)
treemap(data,
index = c('Province'),
vSize = 'GDP',
vColor = 'First',
type = 'index',
palette = 'Set1'
)
treemap(data,
index = c('Province'),
vSize = 'GDP',
vColor = 'First',
type = 'x',
palette = 'Set1'
)
treemap(data,
index = c('Province'),
vSize = 'GDP',
vColor = 'First',
type = 'value',
palette = 'Set1'
)
treemap(data,
index = c('Province'),
vSize = 'GDP',
vColor = 'First',
type = 'value'
#palette = 'Set1'
)
data
reserve <- c("Province", "x", 'y', 'GDP')
data1 <- data[, reserve]
data1
data2 <- rbind(list(data1, data1, data1))
data2
data2 <- do.call('rbind', list(data1, data1, data1))
data2
data2[,2]
data2[,5]
data2[,5] <- rep(1,10)
data2[,5] <- rep(1,3)
data2
data[, -reserve]
data[, which(colnames != reserve)]
data[, which(colnames(data) != reserve)]
treemap(data, index=c("group","subgroup"), vSize="value",
type="index",                            # How you color the treemap. type help(treemap) for more info
palette = "Set1",                        # Select your color palette from the RColorBrewer presets or make your own.
title="My Treemap",                      # Customize your title
fontsize.title=12,                       # Size of the title
)
which(colnames(data) != reserve)
which(colnames(data) != reserve)
colnames(data)
colnames(data)[-reserve]
colnames(data) in reserve
colnames(data) %in% reserve
!(colnames(data) %in% reserve)
newCol <- data[, !(colnames(data) %in% reserve)]
newCol
do.call('rbind', data2)
do.call('rbind', newCol)
newCol
do.call('rbind', list(newCol))
data4 <- lapply(data3, function(x) {
name <- names(x)
y <- data.frame(rep(name,ncol(x)), x)
names(x) <- c(newColName, 'Value')
})
data3 <- data[, !(colnames(data) %in% reserve)]
data4 <- lapply(data3, function(x) {
name <- names(x)
y <- data.frame(rep(name,ncol(x)), x)
names(x) <- c(newColName, 'Value')
})
data3
str(data3)
data3[[1]]
names(data3[[1]])
length(data3)
names(data3)
data4 <- lapply(1:length(data3), function(x) {
name <- names(x)
x <- data3[, x]
y <- data.frame(rep(name,ncol(x)), x)
names(x) <- c(newColName, 'Value')
})
data4 <- lapply(1:length(data3), function(x) {
name <- names(x)
x1 <- data3[, x]
y <- data.frame(rep(name,ncol(x1)), x1)
names(y) <- c(newColName, 'Value')
})
data4 <- lapply(1:length(data3), function(x) {
name <- names(x)
x1 <- data3[, x]
y <- data.frame(rep(name,ncol(x1)), x1)
names(y) <- c(newColName, 'Value')
})
x
x <- 1
name <- names(x)
data4 <- lapply(1:length(data3), function(x) {
name <- names(data3)[x]
x1 <- data3[, x]
y <- data.frame(rep(name,ncol(x1)), x1)
names(y) <- c(newColName, 'Value')
})
x1 <- data3[, x]
ncol(x1)
x1
data4 <- lapply(1:length(data3), function(x) {
name <- names(data3)[x]
x1 <- data3[, x]
y <- data.frame(rep(name, length(x1)), x1)
names(y) <- c(newColName, 'Value')
})
newColName <- 'new'
data4 <- lapply(1:length(data3), function(x) {
name <- names(data3)[x]
x1 <- data3[, x]
y <- data.frame(rep(name, length(x1)), x1)
names(y) <- c(newColName, 'Value')
})
data4
data5 <- do.call('rbind', data4)
data5
name <- names(data3)[x]
name
x1 <- data3[, x]
x1
y <- data.frame(rep(name, length(x1)), x1)
y
names(y) <- c(newColName, 'Value')
y
data4 <- lapply(1:length(data3), function(x) {
name <- names(data3)[x]
x1 <- data3[, x]
y <- data.frame(rep(name, length(x1)), x1)
names(y) <- c(newColName, 'Value')
return (y)
})
data4
data5 <- do.call('rbind', data4)
data5
data3
data6 <- cbind(data2, data5)
data6
data2[, length(reserve) + 1] <- data5
data2 <- do.call('rbind', list(data1, data1, data1))
data2[, length(reserve) + 1] <- data5
data2
data1 <- data[, reserve]
data2 <- do.call('rbind', list(data1, data1, data1))
data2
data6 <- cbind(data2, data5)
data6
fortify <- function(data, reserve, newColName) {
data1 <- data[, reserve]
data2 <- do.call('rbind', list(data1, data1, data1))
data3 <- data[, !(colnames(data) %in% reserve)]
data4 <- lapply(1:length(data3), function(x) {
name <- names(data3)[x]
x1 <- data3[, x]
y <- data.frame(rep(name, length(x1)), x1)
names(y) <- c(newColName, 'Value')
return (y)
})
data5 <- do.call('rbind', data4)
data6 <- cbind(data2, data5)
return(data6)
}
data <- fortify(GDPmix, reserve, newColName = 'Mix')
data
treemap(data,
index = c('Province'),
vSize = 'GDP',
vColor = 'First',
type = 'value'
#palette = 'Set1'
)
treemap(data,
index = c('Province'),
vSize = 'GDP',
vColor = 'mix',
type = 'value'
#palette = 'Set1'
)
treemap(data,
index = c('Province'),
vSize = 'GDP',
vColor = 'Mix',
type = 'value'
#palette = 'Set1'
)
data
treemap(data,
index = c('Province'),
vSize = 'GDP',
vColor = 'Mix',
type = 'value'
#palette = 'Set1'
)
treemap(data,
index = c('Province'),
vSize = 'GDP',
vColor = 'Value',
type = 'value'
#palette = 'Set1'
)
treemap(data,
index = c('Province'),
vSize = 'GDP',
vColor = 'GDP',
type = 'value'
#palette = 'Set1'
)
treemap(data,
index = c('Province'),
vSize = 'GDP',
vColor = 'Mix',
type = 'value'
#palette = 'Set1'
)
treemap(data,
index = c('Province'),
vSize = 'GDP',
#vColor = 'Mix',
type = 'value'
#palette = 'Set1'
)
treemap(data,
index = c('Province'),
vSize = 'GDP',
vColor = 'Mix',
type = 'value'
#palette = 'Set1'
)
treemap(data,
index = c('Province'),
vSize = 'GDP',
vColor = 'GDP',
type = 'value'
#palette = 'Set1'
)
treemap(data,
index = c('Province', 'Mix'),
vSize = 'GDP',
vColor = 'GDP',
type = 'value'
#palette = 'Set1'
)
treemap(data,
index = c('Province', 'Mix'),
vSize = 'GDP',
vColor = 'GDP',
type = 'index'
#palette = 'Set1'
)
data
treemap(data,
index = c('Province', 'Mix'),
vSize = 'GDP',
vColor = 'x',
type = 'index'
#palette = 'Set1'
)
treemap(data,
index = c('Province', 'Mix'),
vSize = 'GDP',
vColor = 'x',
type = 'value'
#palette = 'Set1'
)
treemap(data,
index = c('Province', 'Mix'),
vSize = 'GDP',
vColor = 'x',
type = 'value'
#palette = 'Set1'
)
data
data[, 'Province' == "Guizhou"]
data['Province' == "Guizhou",]
data[data[,'Province'] == "Guizhou",]
treemap(data,
index = c('Province', 'Mix'),
vSize = c('GDP', 'Valu'),
vColor = 'x',
type = 'value'
#palette = 'Set1'
)
reserve
reserve <- reserve[1:3]
reserve
data <- fortify(GDPmix, reserve, 'Mix')
debug(fortify)
data <- fortify(GDPmix, reserve, 'Mix')
data1
data2
rep(data1, 4)
x <- list(foo = "", bar = 0)
x
rep(list(x), 2)
list(data1, data1, data1)
data2 <- do.call('rbind', rep(list(data1), ncol(data) - length(reserve)))
data2
reserve
data1 <- data[, reserve]
data2 <- do.call('rbind', rep(list(data1), ncol(data) - length(reserve)))
data2
fortify <- function(data, reserve, newColName) {
data1 <- data[, reserve]
data2 <- do.call('rbind', rep(list(data1), ncol(data) - length(reserve)))
data3 <- data[, !(colnames(data) %in% reserve)]
data4 <- lapply(1:length(data3), function(x) {
name <- names(data3)[x]
x1 <- data3[, x]
y <- data.frame(rep(name, length(x1)), x1)
names(y) <- c(newColName, 'Value')
return (y)
})
data5 <- do.call('rbind', data4)
data6 <- cbind(data2, data5)
return(data6)
}
fortify(GDPmix, reserve, 'Mix')
data <- fortify(GDPmix, reserve, 'Mix')
treemap(data,
index = c('Province', 'Mix'),
vSize = 'Value',
vColor = 'Value',
type = 'value'
#palette = 'Set1'
)
reserve
reserver <- c(reserve, "GDP")
reserve
reserve <- c(reserve, "GDP")
reserve
data <- fortify(GDPmix, reserve, 'Mix')
treemap(data,
index = c('Province', 'Mix'),
vSize = 'Value',
vColor = 'Value',
type = 'value'
#palette = 'Set1'
)
treemap(data,
index = c('Province'),
vSize = 'Value',
vColor = 'Value',
type = 'value'
#palette = 'Set1'
)
treemap(data,
index = c('Province'),
vSize = 'GDP',
vColor = 'GDP',
type = 'value'
#palette = 'Set1'
)
devtools::document()
devtools::document()
devtools::check(cran = T)
devtools::check(cran = T)
treemap(data,
index = c('Province'),
vSize = 'GDP',
vColor = 'GDP',
type = 'value'
#palette = 'Set1'
)
library(maps)
devtools::document()
devtools::check(cran = T)
