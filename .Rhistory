if (x <= 40000 & x >= 15000) {
x <- medium
} else if (x < 15000) {
x <- small
} else {
x <- large
}
})
return (r)
}
getRadius(data$GDP)
data$GDP
data
r <- getRadius(data$GDP, small, medium, large)
small = NULL
medium = NULL
large = NULL
r <- getRadius(data$GDP, small, medium, large)
r
getRadius <- function(y, small = 1.5, medium = 3, large = 5) {
r <- sapply(y, function(x) {
if (x <= 40000 & x >= 15000) {
x <- medium
} else if (x < 15000) {
x <- small
} else {
x <- large
}
})
return (r)
}
r
r <- getRadius(data$GDP, small, medium, large)
r
data$GDP
debug(getRadius)
r <- getRadius(data$GDP, small, medium, large)
small
small = 1.5
medium = 3
large = 5
r <- getRadius(data$GDP, small, medium, large)
r
data$x
data
for (i in 1:provinceNum) {
add.pie(x = data$x[i], y = data$y[i], z = c(data$First[i], data$Second[i], data$Third[i]),
labels = data$Province[i], radius = r[i], col = col, border = F)
}
plot.new()
for (i in 1:provinceNum) {
add.pie(x = data$x[i], y = data$y[i], z = c(data$First[i], data$Second[i], data$Third[i]),
labels = data$Province[i], radius = r[i], col = col, border = F)
}
plot.new()
plot(data$x, data$y, main = title, xlab = xname, ylab = yname,
xlim = xlim, ylim = ylim)
for (i in 1:provinceNum) {
add.pie(x = data$x[i], y = data$y[i], z = c(data$First[i], data$Second[i], data$Third[i]),
labels = data$Province[i], radius = r[i], col = col, border = F)
}
for (i in 1:provinceNum) {
add.pie(x = data$x[i], y = data$y[i], z = c(data$First[i], data$Second[i], data$Third[i]),
labels = data$Province[i], radius = r[i], col = col, border = F, density = 10)
}
for (i in 1:provinceNum) {
add.pie(x = data$x[i], y = data$y[i], z = c(data$First[i], data$Second[i], data$Third[i]),
labels = data$Province[i], radius = r[i], col = col, border = F, density = 5)
}
plot.new()
plot(data$x, data$y, main = title, xlab = xname, ylab = yname,
xlim = xlim, ylim = ylim)
for (i in 1:provinceNum) {
add.pie(x = data$x[i], y = data$y[i], z = c(data$First[i], data$Second[i], data$Third[i]),
labels = data$Province[i], radius = r[i], col = col, border = F, density = 5)
}
plot.new()
plot(data$x, data$y, main = title, xlab = xname, ylab = yname,
xlim = xlim, ylim = ylim)
for (i in 1:provinceNum) {
add.pie(x = data$x[i], y = data$y[i], z = c(data$First[i], data$Second[i], data$Third[i]),
labels = data$Province[i], radius = r[i], col = col, border = F, density = 10)
}
plotWaternomics <- function(data, title = NULL, xname= NULL, yname = NULL, small = 1.5, medium = 3, large = 5) {
# plot basic plot based on x and y
plot.new()
# for some buffer space, extend the x and y axis, redefine them first
xlim <- getLim(data$x)
ylim <- getLim(data$y)
plot(data$x, data$y, main = title, xlab = xname, ylab = yname,
xlim = xlim, ylim = ylim)
provinceNum <- nrow(data)
# decide radius of the pie charts
r <- getRadius(data$GDP, small, medium, large)
# define CWR color
col <- c(rgb(107/255, 128/255, 51/255), rgb(2/255, 3/255, 3/255), rgb(13/255, 119/255, 185/255))
# add pie charts
for (i in 1:provinceNum) {
add.pie(x = data$x[i], y = data$y[i], z = c(data$First[i], data$Second[i], data$Third[i]),
labels = data$Province[i], radius = r[i], col = col, border = F)
}
}
getLim <- function(x) {
x1 <- round(min(x)) - round((max(x) - min(x))/length(x))
x2 <- round(max(x)) + round((max(x) - min(x))/length(x))
return(c(x1, x2))
}
# this is for setting plot radius
getRadius <- function(y, small = 1.5, medium = 3, large = 5) {
r <- sapply(y, function(x) {
if (x <= 40000 & x >= 15000) {
x <- medium
} else if (x < 15000) {
x <- small
} else {
x <- large
}
})
return (r)
}
plotWaternomics(data)
?plot
plot(data$x, data$y, main = title, xlab = xname, ylab = yname,
xlim = xlim, ylim = ylim,
axes = F)
plot.new()
plot(data$x, data$y, main = title, xlab = xname, ylab = yname,
xlim = xlim, ylim = ylim,
axes = F)
for (i in 1:provinceNum) {
add.pie(x = data$x[i], y = data$y[i], z = c(data$First[i], data$Second[i], data$Third[i]),
labels = data$Province[i], radius = r[i], col = col, border = F)
}
plot(data$x, data$y, main = title, xlab = xname, ylab = yname,
xlim = xlim, ylim = ylim,
bty = 'l')
plot(data$x, data$y, main = title, xlab = xname, ylab = yname,
xlim = xlim, ylim = ylim,
bty = 'o')
plot(data$x, data$y, main = title, xlab = xname, ylab = yname,
xlim = xlim, ylim = ylim,
bty = 'l')
for (i in 1:provinceNum) {
add.pie(x = data$x[i], y = data$y[i], z = c(data$First[i], data$Second[i], data$Third[i]),
labels = data$Province[i], radius = r[i], col = col, border = F)
}
plot(data$x, data$y, main = title, xlab = xname, ylab = yname,
xlim = xlim, ylim = ylim,
bty = '7')
plot(data$x, data$y, main = title, xlab = xname, ylab = yname,
xlim = xlim, ylim = ylim,
bty = 'n')
xlim
xlim <- getLim(data$x)
ylim <- getLim(data$y)
plot(data$x, data$y, main = title, xlab = xname, ylab = yname,
xlim = xlim, ylim = ylim,
bty = 'n')
for (i in 1:provinceNum) {
add.pie(x = data$x[i], y = data$y[i], z = c(data$First[i], data$Second[i], data$Third[i]),
labels = data$Province[i], radius = r[i], col = col, border = F)
}
plot.new()
plot(data$x, data$y, main = title, xlab = xname, ylab = yname,
xlim = xlim, ylim = ylim,
bty = 'n')
for (i in 1:provinceNum) {
add.pie(x = data$x[i], y = data$y[i], z = c(data$First[i], data$Second[i], data$Third[i]),
labels = data$Province[i], radius = r[i], col = col, border = F, edges = 100000)
}
for (i in 1:provinceNum) {
add.pie(x = data$x[i], y = data$y[i], z = c(data$First[i], data$Second[i], data$Third[i]),
labels = data$Province[i], radius = r[i], col = col, border = F, edges = 10)
}
plot.new()
plot(data$x, data$y, main = title, xlab = xname, ylab = yname,
xlim = xlim, ylim = ylim,
bty = 'n')
for (i in 1:provinceNum) {
add.pie(x = data$x[i], y = data$y[i], z = c(data$First[i], data$Second[i], data$Third[i]),
labels = data$Province[i], radius = r[i], col = col, border = F, edges = 10)
}
for (i in 1:provinceNum) {
add.pie(x = data$x[i], y = data$y[i], z = c(data$First[i], data$Second[i], data$Third[i]),
labels = data$Province[i], radius = r[i], col = col, border = F)
}
for (i in 1:provinceNum) {
add.pie(x = data$x[i], y = data$y[i], z = c(data$First[i], data$Second[i], data$Third[i]),
labels = data$Province[i], radius = r[i], col = col, border = "white")
}
plot(data$x, data$y, main = title, xlab = xname, ylab = yname,
#xlim = xlim, ylim = ylim,
bty = 'n')
for (i in 1:provinceNum) {
add.pie(x = data$x[i], y = data$y[i], z = c(data$First[i], data$Second[i], data$Third[i]),
labels = data$Province[i], radius = r[i], col = col, border = "white")
}
plot(data$x, data$y, main = title, xlab = xname, ylab = yname,
xlim = xlim, ylim = ylim,
bty = 'n')
xlim
plot(data$x, data$y, main = title, xlab = xname, ylab = yname,
xlim = c(30, 100), ylim = ylim,
bty = 'n')
plot(data$x, data$y, main = title, xlab = xname, ylab = yname,
xlim = c(26, 99), ylim = ylim,
bty = 'n')
plot(data$x, data$y, main = title, xlab = xname, ylab = yname,
xlim = c(19, 99), ylim = ylim,
bty = 'n')
library(sos)
axis(side = 1, at = c(0,25,50))
plot(data$x, data$y, main = title, xlab = xname, ylab = yname,
xlim = xlim, ylim = ylim,
bty = 'n')
nchar(89)
x <- data$x
x
dig <- ncahr(min(round(x))
x1 <- round(min(x)) - round((max(x) - min(x))/length(x))
x2 <- round(max(x)) + round((max(x) - min(x))/length(x))
return(c(x1, x2))
}
# this is for setting plot radius
getRadius <- function(y, small = 1.5, medium = 3, large = 5) {
r <- sapply(y, function(x) {
if (x <= 40000 & x >= 15000) {
x <- medium
} else if (x < 15000) {
x <- small
} else {
x <- large
}
})
return (r)
}
dig <- ncahr(min(round(x)))
dig <- nchar(min(round(x)))
dig
for (i in 1:provinceNum) {
add.pie(x = data$x[i], y = data$y[i], z = c(data$First[i], data$Second[i], data$Third[i]),
labels = data$Province[i], radius = r[i], col = col, border = "white")
}
plot.new()
plot(data$x, data$y, main = title, xlab = xname, ylab = yname,
xlim = xlim, ylim = ylim,
bty = 'n')
for (i in 1:provinceNum) {
add.pie(x = data$x[i], y = data$y[i], z = c(data$First[i], data$Second[i], data$Third[i]),
labels = data$Province[i], radius = r[i], col = col, border = "white", legend())
}
for (i in 1:provinceNum) {
add.pie(x = data$x[i], y = data$y[i], z = c(data$First[i], data$Second[i], data$Third[i]),
labels = data$Province[i], radius = r[i], col = col, border = "white")
}
legend()
legend("topright", c("Agriculture","Industry","Services"), cex = 0.8,
fill = rainbow(length(x)))
legend("topright", c("Agriculture","Industry","Services"), cex = 0.8,
fill = col)
legend(c("Agriculture","Industry","Services"), cex = 0.8,
fill = col)
plot.new()
plot(data$x, data$y, main = title, xlab = xname, ylab = yname,
xlim = xlim, ylim = ylim,
bty = 'n')
for (i in 1:provinceNum) {
add.pie(x = data$x[i], y = data$y[i], z = c(data$First[i], data$Second[i], data$Third[i]),
labels = data$Province[i], radius = r[i], col = col, border = "white")
}
legend(c("Agriculture","Industry","Services"), cex = 0.8,
fill = col)
legend('topleft', c("Agriculture","Industry","Services"), cex = 0.8,
fill = col)
legend('topright', c("Agriculture","Industry","Services"), cex = 0.8,
fill = col)
plot(data$x, data$y, main = title, xlab = xname, ylab = yname,
xlim = xlim, ylim = ylim,
bty = 'n')
for (i in 1:provinceNum) {
add.pie(x = data$x[i], y = data$y[i], z = c(data$First[i], data$Second[i], data$Third[i]),
radius = r[i], col = col, border = "white")
par(labels = data$Province[i])
}
plot(data$x, data$y, main = title, xlab = xname, ylab = yname,
xlim = xlim, ylim = ylim,
bty = 'n')
for (i in 1:provinceNum) {
if (label = TRUE) {
label <-  data$Province[i]
} else {
label <- FALSE
}
add.pie(x = data$x[i], y = data$y[i], z = c(data$First[i], data$Second[i], data$Third[i]),
labels = label, radius = r[i], col = col, border = "white")
}
plot(data$x, data$y, main = title, xlab = xname, ylab = yname,
xlim = xlim, ylim = ylim,
bty = 'n')
for (i in 1:provinceNum) {
if (label = TRUE) {
lbl <-  data$Province[i]
} else {
lbl <- FALSE
}
add.pie(x = data$x[i], y = data$y[i], z = c(data$First[i], data$Second[i], data$Third[i]),
labels = label, radius = r[i], col = col, border = "white")
}
for (i in 1:provinceNum) {
if (label = TRUE) {
lbl <-  data$Province[i]
} else {
lbl <- FALSE
}
add.pie(x = data$x[i], y = data$y[i], z = c(data$First[i], data$Second[i], data$Third[i]),
labels = lbl, radius = r[i], col = col, border = "white")
}
for (i in 1:provinceNum) {
if (label = TRUE) {
lbl <-  data$Province[i]
} else {
lbl <- FALSE
}
add.pie(x = data$x[i], y = data$y[i], z = c(data$First[i], data$Second[i], data$Third[i]),
labels = lbl, radius = r[i], col = col, border = "white")
}
for (i in 1:provinceNum) {
if (label == TRUE) {
lbl <-  data$Province[i]
} else {
lbl <- FALSE
}
add.pie(x = data$x[i], y = data$y[i], z = c(data$First[i], data$Second[i], data$Third[i]),
labels = lbl, radius = r[i], col = col, border = "white")
}
for (i in 1:provinceNum) {
if (label == TRUE) {
lbl <-  data$Province[i]
} else {
lbl <- ''
}
add.pie(x = data$x[i], y = data$y[i], z = c(data$First[i], data$Second[i], data$Third[i]),
labels = lbl, radius = r[i], col = col, border = "white")
}
plotWaternomics <- function(data, title = NULL, xname= NULL, yname = NULL, small = 1.5, medium = 3, large = 5,
legend = TRUE, label = TRUE) {
# plot basic plot based on x and y
plot.new()
# for some buffer space, extend the x and y axis, redefine them first
xlim <- getLim(data$x)
ylim <- getLim(data$y)
plot(data$x, data$y, main = title, xlab = xname, ylab = yname,
xlim = xlim, ylim = ylim,
bty = 'n')
provinceNum <- nrow(data)
# decide radius of the pie charts
r <- getRadius(data$GDP, small, medium, large)
# define CWR color
col <- c(rgb(107/255, 128/255, 51/255), rgb(2/255, 3/255, 3/255), rgb(13/255, 119/255, 185/255))
# add pie charts
for (i in 1:provinceNum) {
if (label == TRUE) {
lbl <-  data$Province[i]
} else {
lbl <- ''
}
add.pie(x = data$x[i], y = data$y[i], z = c(data$First[i], data$Second[i], data$Third[i]),
labels = lbl, radius = r[i], col = col, border = "white")
}
if (legend = TRUE) {
legend('topright', c("Agriculture","Industry","Services"), cex = 0.8,
fill = col)
}
}
plotWaternomics <- function(data, title = NULL, xname= NULL, yname = NULL, small = 1.5, medium = 3, large = 5,
legend = TRUE, label = TRUE) {
# plot basic plot based on x and y
plot.new()
# for some buffer space, extend the x and y axis, redefine them first
xlim <- getLim(data$x)
ylim <- getLim(data$y)
plot(data$x, data$y, main = title, xlab = xname, ylab = yname,
xlim = xlim, ylim = ylim,
bty = 'n')
provinceNum <- nrow(data)
# decide radius of the pie charts
r <- getRadius(data$GDP, small, medium, large)
# define CWR color
col <- c(rgb(107/255, 128/255, 51/255), rgb(2/255, 3/255, 3/255), rgb(13/255, 119/255, 185/255))
# add pie charts
for (i in 1:provinceNum) {
if (label == TRUE) {
lbl <-  data$Province[i]
} else {
lbl <- ''
}
add.pie(x = data$x[i], y = data$y[i], z = c(data$First[i], data$Second[i], data$Third[i]),
labels = lbl, radius = r[i], col = col, border = "white")
}
if (legend = TRUE) {
legend('topright', c("Agriculture","Industry","Services"), cex = 0.8,
fill = col)
}
}
plotWaternomics <- function(data, title = NULL, xname= NULL, yname = NULL, small = 1.5, medium = 3, large = 5,
legend = TRUE, label = TRUE) {
# plot basic plot based on x and y
plot.new()
# for some buffer space, extend the x and y axis, redefine them first
xlim <- getLim(data$x)
ylim <- getLim(data$y)
plot(data$x, data$y, main = title, xlab = xname, ylab = yname,
xlim = xlim, ylim = ylim,
bty = 'n')
provinceNum <- nrow(data)
# decide radius of the pie charts
r <- getRadius(data$GDP, small, medium, large)
# define CWR color
col <- c(rgb(107/255, 128/255, 51/255), rgb(2/255, 3/255, 3/255), rgb(13/255, 119/255, 185/255))
# add pie charts
for (i in 1:provinceNum) {
if (label == TRUE) {
lbl <-  data$Province[i]
} else {
lbl <- ''
}
add.pie(x = data$x[i], y = data$y[i], z = c(data$First[i], data$Second[i], data$Third[i]),
labels = lbl, radius = r[i], col = col, border = "white")
}
if (legend = TRUE) {
legend('topright', c("Agriculture","Industry","Services"), cex = 0.8,
fill = col)
}
}
for (i in 1:provinceNum) {
if (label == TRUE) {
lbl <-  data$Province[i]
} else {
lbl <- ''
}
add.pie(x = data$x[i], y = data$y[i], z = c(data$First[i], data$Second[i], data$Third[i]),
labels = lbl, radius = r[i], col = col, border = "white")
}
if (legend = TRUE) {
legend('topright', c("Agriculture","Industry","Services"), cex = 0.8,
fill = col)
}
if (legend = TRUE) {
legend('topright', c("Agriculture","Industry","Services"), cex = 0.8,
fill = col)
}
plotWaternomics <- function(data, title = NULL, xname= NULL, yname = NULL, small = 1.5, medium = 3, large = 5,
legend = TRUE, label = TRUE) {
# plot basic plot based on x and y
plot.new()
# for some buffer space, extend the x and y axis, redefine them first
xlim <- getLim(data$x)
ylim <- getLim(data$y)
plot(data$x, data$y, main = title, xlab = xname, ylab = yname,
xlim = xlim, ylim = ylim,
bty = 'n')
provinceNum <- nrow(data)
# decide radius of the pie charts
r <- getRadius(data$GDP, small, medium, large)
# define CWR color
col <- c(rgb(107/255, 128/255, 51/255), rgb(2/255, 3/255, 3/255), rgb(13/255, 119/255, 185/255))
# add pie charts
for (i in 1:provinceNum) {
if (label == TRUE) {
lbl <-  data$Province[i]
} else {
lbl <- ''
}
add.pie(x = data$x[i], y = data$y[i], z = c(data$First[i], data$Second[i], data$Third[i]),
labels = lbl, radius = r[i], col = col, border = "white")
}
if (legend == TRUE) {
legend('topright', c("Agriculture","Industry","Services"), cex = 0.8,
fill = col)
}
}
plotWaternomics(data)
plotWaternomics(data, label = F)
plotWaternomics(data, legend = F)
dig <- nchar(min(round(x)))
dig
round(35, -2)
round(35, -1)
x1 <- round(min(x)) - round((max(x) - min(x))/length(x))
x1
x1 <- round(min(x) - (max(x) - min(x))/length(x), -(dig-1))
x1
getLim <- function(x) {
# decide axis interval
dig <- nchar(min(round(x)))
x1 <- round(min(x) - (max(x) - min(x))/length(x), -(dig - 1))
x2 <- round(max(x) + (max(x) - min(x))/length(x), -(dig - 1))
return(c(x1, x2))
}
plotWaternomics(data, legend = F)
plotWaternomics(data, legend = F)
devtools::check(cran = T)
devtools::document()
devtools::check(cran = T)
str(GDPmix)
devtools::document()
devtools::check(cran = T)
devtools::check(cran = T)
devtools::check(cran = T)
devtools::document()
devtools::check(cran = T)
devtools::check(cran = T)
