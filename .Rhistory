x
round(x*2)/2
round(21*2)/2
round(21*0.2)/0.2
round(2.1*0.2)/0.2
round(9*0.2)/0.2
round(6*0.2)/0.2
round(4*0.2)/0.2
round(1*0.2)/0.2
round(4*0.2)/0.2
devtools::check(cran = T)
plotScatterPie(GDPmix[1:3,], pieRange = 4:6, pieColor = GDPColor_CWR)
debug(plotScatterPie)
round(23 /5)*5
round(2300/5)*5
round(23009/5)*5
round(0.25/5)*5
power(5, 2)
power(5)
power(2, 4)
pow(5,2)
5 * 10^(n-1)
5 * 10^(-1)
5 * 10^(-2)
devtools::check(cran = T)
plotScatterPie(GDPmix[1:3,], pieRange = 4:6, pieColor = GDPColor_CWR)
debug(roundN)
debug(roundN)
plotScatterPie(GDPmix[1:3,], pieRange = 4:6, pieColor = GDPColor_CWR)
x
round(x / n) * n
x
round(x / 5) * 5
undebug(roundN)
undebug(getLabels)
debug(getLabels)
plotScatterPie(GDPmix[1:3,], pieRange = 4:6, pieColor = GDPColor_CWR)
d
d
roundN((max(lim) - min(lim))/labeln)
round(min(lim), d[2])
round(1.5/5) * 5
min(lim)
d[2]
round(min(lim) *０．５)/0.5
labeln
lim
labeln
d
label1 <- round(min(lim) / d[2]) * d[2]
label1
label1 < min(lim)
label1 <- label1 + d[1]
label1
seq(label1, by = d[1], length.out = labeln)
max(labelseq) > max(lim)
labelseq <- seq(label1, by = d[1], length.out = labeln)
max(labelseq) > max(lim)
max(lim)
labelseq <- seq(label1, by = d[1], length.out = labeln - 1)
labelseq
devtools::check(cran = T)
plotScatterPie(GDPmix[1:3,], pieRange = 4:6, pieColor = GDPColor_CWR)
plotScatterPie(GDPmix[1:2,], pieRange = 4:6, pieColor = GDPColor_CWR)
plotScatterPie(GDPmix[1:3,], pieRange = 4:6, pieColor = GDPColor_CWR)
plotScatterPie(GDPmix, pieRange = 4:6, pieColor = GDPColor_CWR)
devtools::check(cran = T)
plotScatterPie(GDPmix, pieRange = 4:6, pieColor = GDPColor_CWR)
debug(plotScatterPie)
plotScatterPie(GDPmix, pieRange = 4:6, pieColor = GDPColor_CWR)
d <- roundN((max(lim) - min(lim))/labeln)
d
x
round(1/5)*5
l <- strsplit(as.character(x), '\\.')[[1]]
l1 <- strsplit(l[2], '')[[1]]
n <- 0
for (i in l1) {
if (i != '0') break
n <- n + 1
}
n <- 5 * 10^(n-1)
round(x / n) * n
round(x / n)
layer_basic <- ggplot(data, aes(x = x)) +
geom_point(data = data, aes(x, y), size = radius)
layer_pie <- geom_scatterpie(data = data, aes(x, y, r = radius),
cols = colnames(data)[pieRange], color = 'white')
if (is.null(labelLine)) labelLine <- max(data$radius) / 15
data <- GDPmix
pieRange = 4:6
xmeanLine = T
ymeanLine = TRUE
labelLine = NULL
output = FALSE
adj <- getLim(data$x, data$y)
xlim <- adj$lim[1:2]
ylim <- adj$lim[3:4]
ratio <- adj$ratio
if (adj$change == 'x') {
xlabels <- getLabels(xlim / ratio, 5)
data$x <- data$x * ratio
xbreaks <- xlabels * ratio
ybreaks <- getLabels(ylim, 4)
ylabels <- ybreaks
} else if (adj$change == 'y') {
xbreaks <- getLabels(xlim, 5)
xlabels <- xbreaks
ylabels <- getLabels(ylim / ratio, 4)
data$y <- data$y * ratio
ybreaks <- ylabels * ratio
}
data$radius <- getRadius(data$r) * (ylim[2] - ylim[1]) / 50
with (data, {
layer_basic <- ggplot(data, aes(x = x)) +
geom_point(data = data, aes(x, y), size = radius)
layer_pie <- geom_scatterpie(data = data, aes(x, y, r = radius),
cols = colnames(data)[pieRange], color = 'white')
if (is.null(labelLine)) labelLine <- max(data$radius) / 16
layer_label <- geom_text_repel(data = data, aes(x, y, label = label),
point.padding = unit(labelLine, "lines"))
#layer_legend <- geom_scatterpie_legend(data$radius, x= 0, y=0)
if (xmeanLine == TRUE) layer_basic <- layer_basic + geom_vline(xintercept = mean(data$x), color = 'red', size = 1.5, linetype = 2)
if (ymeanLine == TRUE) layer_basic <- layer_basic + geom_hline(yintercept = mean(data$y), color = 'red', size = 1.5, linetype = 2)
if (!is.null(pieColor)) layer_basic <- layer_basic + scale_fill_manual(values = pieColor)
layer_plot <- layer_basic + layer_pie + layer_label  +
coord_equal() + ggstyle() +
scale_x_continuous(breaks = xbreaks, labels = xlabels, limits = xlim) +
scale_y_continuous(breaks = ybreaks, labels = ylabels, limits = ylim)
print(layer_plot)
if (output == TRUE) return(layer_plot)
})
library(ggplot2)
library(scatterpie)
library(ggrepel)
layer_basic <- ggplot(data, aes(x = x)) +
geom_point(data = data, aes(x, y), size = radius)
data$radius <- getRadius(data$r) * (ylim[2] - ylim[1]) / 50
layer_basic <- ggplot(data, aes(x = x)) +
geom_point(data = data, aes(x, y), size = radius)
layer_basic <- ggplot(data, aes(x = x))
layer_pie <- geom_scatterpie(data = data, aes(x, y, r = radius),
cols = colnames(data)[pieRange], color = 'white')
if (is.null(labelLine)) labelLine <- max(data$radius) / 16
layer_label <- geom_label_repel(data = data, aes(x, y, label = label),
point.padding = unit(labelLine, "lines"))
layer_plot <- layer_basic + layer_pie + layer_label  +
coord_equal() + ggstyle() +
scale_x_continuous(breaks = xbreaks, labels = xlabels, limits = xlim) +
scale_y_continuous(breaks = ybreaks, labels = ylabels, limits = ylim)
print(layer_plot)
if (is.null(labelLine)) labelLine <- max(data$radius) / 20
layer_label <- geom_label_repel(data = data, aes(x, y, label = label),
point.padding = unit(labelLine, "lines"))
layer_plot <- layer_basic + layer_pie + layer_label  +
coord_equal() + ggstyle() +
scale_x_continuous(breaks = xbreaks, labels = xlabels, limits = xlim) +
scale_y_continuous(breaks = ybreaks, labels = ylabels, limits = ylim)
print(layer_plot)
if (is.null(labelLine)) labelLine <- max(data$radius) / 25
layer_label <- geom_label_repel(data = data, aes(x, y, label = label),
point.padding = unit(labelLine, "lines"))
layer_plot <- layer_basic + layer_pie + layer_label  +
coord_equal() + ggstyle() +
scale_x_continuous(breaks = xbreaks, labels = xlabels, limits = xlim) +
scale_y_continuous(breaks = ybreaks, labels = ylabels, limits = ylim)
print(layer_plot)
if (is.null(labelLine)) labelLine <- max(data$radius) / 30
labelLine
layer_label <- geom_label_repel(data = data, aes(x, y, label = label),
point.padding = unit(labelLine, "lines"))
layer_plot <- layer_basic + layer_pie + layer_label  +
coord_equal() + ggstyle() +
scale_x_continuous(breaks = xbreaks, labels = xlabels, limits = xlim) +
scale_y_continuous(breaks = ybreaks, labels = ylabels, limits = ylim)
print(layer_plot)
if (is.null(labelLine)) labelLine <- max(data$radius) / 40
labelLine
labelLine <- max(data$radius) / 20
layer_label <- geom_label_repel(data = data, aes(x, y, label = label),
point.padding = unit(labelLine, "lines"))
layer_plot <- layer_basic + layer_pie + layer_label  +
coord_equal() + ggstyle() +
scale_x_continuous(breaks = xbreaks, labels = xlabels, limits = xlim) +
scale_y_continuous(breaks = ybreaks, labels = ylabels, limits = ylim)
print(layer_plot)
labelLine <- max(data$radius) / 25
layer_label <- geom_label_repel(data = data, aes(x, y, label = label),
point.padding = unit(labelLine, "lines"))
layer_plot <- layer_basic + layer_pie + layer_label  +
coord_equal() + ggstyle() +
scale_x_continuous(breaks = xbreaks, labels = xlabels, limits = xlim) +
scale_y_continuous(breaks = ybreaks, labels = ylabels, limits = ylim)
print(layer_plot)
is.null(labelLine)
devtools::check(cran = T)
plotScatterPie(GDPmix, pieRange = 4:6, pieColor = GDPColor_CWR)
devtools::check(cran = T)
shiny::runApp('C:/Users/User/Google Drive/CWR/R/Provincial_waternomics')
plotScatterPie(GDPmix, pieRange = 4:6, pieColor = GDPColor_CWR)
debug(plotScatterPie)
plotScatterPie(GDPmix, pieRange = 4:6, pieColor = GDPColor_CWR)
label
devtools::check(cran = T)
plotScatterPie(GDPmix, pieRange = 4:6, pieColor = GDPColor_CWR)
plotScatterPie(GDPmix, pieRange = 4:6, pieColor = GDPColor_CWR, label_on = F)
devtools::check(cran = T)
devtools::check(cran = T)
devtools::check(cran = T)
GDPColor_CWR <- c("#6B8033", "#020303", "#0D77B9")
colnames(GDPmix)[1] <- 'label'
plotScatterPie(GDPmix, pieRange = 4:6, pieColor = GDPColor_CWR)
plotScatterPie(GDPmix, pieRange = 4:6, pieColor = GDPColor_CWR, label_on = F)
plotScatterPie(GDPmix, pieRange = 4:6, pieColor = GDPColor_CWR)
devtools::check(cran = T)
plotScatterPie(GDPmix, pieRange = 4:6, pieColor = GDPColor_CWR)
devtools::check(cran = T)
plotScatterPie(GDPmix, pieRange = 4:6, pieColor = GDPColor_CWR)
devtools::check(cran = T)
devtools::build()
plotScatterPie(GDPmix, pieRange = 4:6, pieColor = GDPColor_CWR)
devtools::check(cran = T)
data <- GDPmix
pieRange <- 4:6
GDPColor_CWR <- c("#6B8033", "#020303", "#0D77B9")
pieColor = GDPColor_CWR
if(is.null(pieRange)) stop("You have to assign which column to which column to be presented by pie chart.")
if(length(pieRange)!=length(pieColor)) stop("Length of pieRange and pieColor should be the same.")
adj <- getLim(data$x, data$y)
xlim <- adj$lim[1:2]
ylim <- adj$lim[3:4]
ratio <- adj$ratio
if (adj$change == 'x') {
xlabels <- getLabels(xlim / ratio, 5)
data$x <- data$x * ratio
xbreaks <- xlabels * ratio
ybreaks <- getLabels(ylim, 4)
ylabels <- ybreaks
} else if (adj$change == 'y') {
xbreaks <- getLabels(xlim, 5)
xlabels <- xbreaks
ylabels <- getLabels(ylim / ratio, 4)
data$y <- data$y * ratio
ybreaks <- ylabels * ratio
}
data$radius <- getRadius(data$r) * (ylim[2] - ylim[1]) / 50
data$radius
s
layer_basic <- ggplot()
library(ggplot2)
library(ggrepel)
library(scatterpie)
layer_basic <- ggplot()
str(layer_basic + layer_pie)
layer_pie <- geom_scatterpie(data = data, aes(x, y, r = radius),
cols = colnames(data)[pieRange], color = 'white')
str(layer_basic + layer_pie)
x <- layer_basic + layer_pie
str(x)
x$mapping
x
x <- x + coord_equal()
x
str(x)
x$mapping
layer_basic <- ggplot(data, aex(x = x))
layer_basic <- ggplot(data, aes(x = x))
layer_pie <- geom_scatterpie(data = data, aes(x, y, r = radius),
cols = colnames(data)[pieRange], color = 'white')
x <- layer_basic + layer_pie
str(x)
x$mapping
debug(geom_scatterpie)
layer_pie <- geom_scatterpie(data = data, aes(x, y, r = radius),
cols = colnames(data)[pieRange], color = 'white')
str(layer_pie)
str(layer_basic)
layer_label <- geom_label_repel(data = data, aes(x, y, label = label),
point.padding = unit(1, "lines"))
str(layer_label)
layer_pie <- geom_scatterpie(data = data, aes(x, y, r = radius),
cols = colnames(data)[pieRange], color = 'white')
geom
stat
params$show_guide
mapping
geom
stat
?find_subclass
??find_subclass
super
?paste0
params
aes_params
geom_params
all
extra_param
extra_aex
extra_aes
devtools::check(cran = T)
GDPColor_CWR <- c("#6B8033", "#020303", "#0D77B9")
colnames(GDPmix)[1] <- 'label'
plotScatterPie(GDPmix, pieRange = 4:6)
plotScatterPie(GDPmix, pieRange = 4:6, NULL)
GDPColor_CWR <- c("#6B8033", "#020303", "#0D77B9")
plotScatterPie(GDPmix, pieRange = 4:6, pieColor = GDPColor_CWR)
debug(plotScatterPie)
GDPColor_CWR <- c("#6B8033", "#020303", "#0D77B9")
plotScatterPie(GDPmix, pieRange = 4:6, NULL)
pieColor
devtools::check(cran = T)
plotScatterPie(GDPmix, pieRange = 4:6, NULL)
debug(plotScatterPie)
plotScatterPie(GDPmix, pieRange = 4:6, NULL)
plotScatterPie(GDPmix, pieRange = 4:6, NULL)
str(data)
devtools::check(cran = T)
plotScatterPie(GDPmix, pieRange = 4:6, NULL)
ratio <- (max(x) - min(x)) / (rmax - rmin)
devtools::check(cran = T)
plotScatterPie(GDPmix, pieRange = 4:6, NULL)
devtools::check(cran = T)
plotScatterPie(GDPmix, pieRange = 4:6, NULL)
debug(plotScatterPie)
plotScatterPie(GDPmix, pieRange = 4:6, NULL)
d
labels
label1
min(lim)
devtools::check(cran = T)
plotScatterPie(GDPmix, pieRange = 4:6, NULL)
debug(plotScatterPie)
plotScatterPie(GDPmix, pieRange = 4:6, NULL)
xlim
label1
seq(label1, by = d[1], length.out = labeln)
max(lim)
min(lim)
round((max(lim) - label1) / d)
d
round((max(lim) - label1) / d[1])
(max(lim) - label1)
seq(label1, by = d[1], length.out = 6)
seq(label1, by = d[1], length.out = 6Q)
devtools::check(cran = T)
plotScatterPie(GDPmix, pieRange = 4:6, NULL)
plotScatterPie(GDPmix[1:3,], pieRange = 4:6, NULL)
url1 <- 'http://vip.stock.finance.sina.com.cn/corp/go.php/vCI_CorpInfo/stockid/600630.phtml?'
url2 <- '.phtml?'
ticker <- 600630
url <- paste(url1, url2, ticker, sep = '')
url
res <- read.html(url)
library(rvest)
res <- read.html(url)
res <- read_html(url)
?read_html
library(rvest)
html_table(url)
url
url <- paste(url1, ticker, url2, sep = '')
res <- read_html(url)
url
url1 <- 'http://vip.stock.finance.sina.com.cn/corp/go.php/vCI_CorpInfo/stockid/'
url2 <- '.phtml?'
url <- paste(url1, ticker, url2, sep = '')
res <- read_html(url)
url
url1 <- 'http://vip.stock.finance.sina.com.cn/corp/go.php/vCI_CorpInfo/stockid/'
url2 <- '.phtml'
url <- paste(url1, ticker, url2, sep = '')
res <- read_html(url)
res <- html(url)
res <- read_html(url)
GET(url)
library(httr)
GET(url)
a <- GET(url)
read_html(a)
html_table(a)
content(a)
read_html(url,encoding = 'utf-8')
install.packages('rvest')
install.packages("rvest")
library(httr)
library(rvest)
read_html(url,encoding = 'utf-8')
read_html(url,encoding = 'gzip')
read_html(url,encoding = 'gzip')
content(a, encoding = 'gzip')
read_html('http://stockdata.stock.hexun.com/gszl/s600630.shtml')
url1 <- 'http://stockdata.stock.hexun.com/gszl/s'
url2 <- '.shtml'
url <- paste(url1, ticker, url2, sep = '')
url
res <- read_html(url)
res <- url %>% read_html() %>% html_talbe()
res <- url %>% read_html() %>% html_table()
res
res <- res[[1]][4, 1]
res
res <- url %>% read_html() %>% html_table()
ENName <- res[[1]][4, 2]
ENName
devtools::check(cran=T)
devtools::check(cran=T)
devtools::document()
devtools::document()
devtools::document()
devtools::check(cran=T)
?read_html
devtools::document()
devtools::check(cran=T)
devtools::check(cran=T)
devtools::check(cran=T)
getENnames(652300)
getENNames(652300)
getENNames(600300)
getENNames(600301)
a <- read.talbe('clipboard', colClass = 'character')
a <- read.table('clipboard', colClass = 'character')
a
a <- read.table('clipboard', colClass = 'character')
a
b <- getENNames(a)
debug(getENNames)
b <- getENNames(a)
res1
devtools::check(cran=T)
b <- getENNames(a)
write.table(b, 'clipboard')
write.table(b, 'clipboard', col.names = F)
write.table(b, 'clipboard', col.names = F, row.names = F)
a <- read.table('clipboard', colClass = 'character')
a
b <- getENNames(a)
b <- getENNames(a)
a
getENNames('00968')
debug(getENNames)
getENNames('00968')
ticker
url
url %>% read_html() %>% html_table()
read_html(url)
url
ticker
a
getENNames('00968')
getENNames('000968')
getENNames('000968')
url
read_html(url)
closeAllConnections()
b <- getENNames(a)
C
getENNames('000968')
url %>% read_html() %>% html_table()
read_html(url)
read_html(url, encoding = 'utf-8')
read_html(url, encoding = 'gzip')
read_html(url)
url
read_html('http://stockdata.stock.hexun.com/gszl/s000968.shtml')
read_html('http://stockdata.stock.hexun.com/gszl/s600630.shtml')
read_html('http://stockdata.stock.hexun.com/gszl/s000630.shtml')
grep('a', 'dasdf')
grepl('a', 'dasdf')
devtools::check(cran = T)
devtools::check(cran = T)
b <- getENNames(a)
b
write.table(b, 'clipboard', col.names = F, row.names = F)
a
a <- read.table('clipboard', colClass = 'character')
a
b <- getENNames(a)
b
write.table(b, 'clipboard', col.names = F, row.names = F)
a <- read.table('clipboard', colClass = 'character')
a
b <- getENNames(a)
warnings()
b
write.table(b, 'clipboard', col.names = F, row.names = F)
a <- read.table('clipboard', colClass = 'character')
b <- getENNames(a)
b
write.table(b, 'clipboard', col.names = F, row.names = F)
a <- read.table('clipboard', colClass = 'character')
b
b <- getENNames(a)
write.table(b, 'clipboard', col.names = F, row.names = F)
a <- read.table('clipboard', colClass = 'character')
a
b <- getENNames(a)
write.table(b, 'clipboard', col.names = F, row.names = F)
rm(list=ls())
devtools::document()
devtools::check(cran = T)
devtools::document()
devtools::check(cran = T)
devtools::build()
devtools::build()
devtools::check(cran=T)
devtools::build()
devtools::check(cran=T)
devtools::check(cran =T)
devtools::check(cran =T)
devtools::check(cran =T)
devtools::build()
devtools::check(cran =T)
