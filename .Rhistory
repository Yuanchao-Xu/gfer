GDP <- getNBS('GDP', 2004, 2015)
write.table(GDP, file = file.choose(new = T), row.names = F, col.names = T, sep = ',')
wateruse <- getNBS('water use', 2004, 2015)
write.table(wateruse, file = file.choose(new = T), row.names = F, col.names = T, sep = ',')
waterresource <- getNBS('water resource', 2004, 2015)
waterresource <- getNBS('water resources', 2004, 2015)
write.table(waterresource, file = file.choose(new = T), row.names = F, col.names = T, sep = ',')
Wastewater <- getNBS('wastewater', 2004, 2015)
write.table(Wastewater, file = file.choose(new = T), row.names = F, col.names = T, sep = ',')
GDP <- gsheet2tbl('https://docs.google.com/spreadsheets/d/1hkmciju6L3DQjoziFfhDMv3wS7Gpx1rJLW-Fdcykhck/edit#gid=1261170248')
library(gsheet)
GDP <- gsheet2tbl('https://docs.google.com/spreadsheets/d/1hkmciju6L3DQjoziFfhDMv3wS7Gpx1rJLW-Fdcykhck/edit#gid=1261170248')
str(GDP)
head(GDP)
selected <- c('Province', 'Year','Gross Regional Product', 'Value-added of the Primary Industry', 'Value-added of the Secondary Industry',
'Value-added of the Tertiary Industry')
GDP <- GDP[, selected, with = F]
head(GDP)
str(GDP)
GDP[, selected]
GDP
selected <- c('Province', 'Year', 'Total Use of Water ')
wateruse <- wateruse[, selected]
wateruse <- gsheet2tbl('https://docs.google.com/spreadsheets/d/1hkmciju6L3DQjoziFfhDMv3wS7Gpx1rJLW-Fdcykhck/edit#gid=616646461')
wastewater <- gsheet2tbl('https://docs.google.com/spreadsheets/d/1hkmciju6L3DQjoziFfhDMv3wS7Gpx1rJLW-Fdcykhck/edit#gid=2060805027')
wateruse <- wateruse[, selected]
selected <- c('Province', 'Year', 'Total Use of Water')
wateruse <- wateruse[, selected]
selected <- c('Province', 'Year', 'Total Waste Water Discharged')
wastewater <- wastewater[, selected, with = F]
wastewater <- wastewater[, selected]
res <- cbind(GDP, wateruse[, 3], wastewater[,3])
res
length(GDP)
ncol(GDP)
nrow(GDP)
str(res)
nrow(res)
res[, 8]
colnames(re)
colnames(res)
selected <- c('Province', 'Year','Gross Regional Product', 'Value-added of the Primary Industry', 'Value-added of the Secondary Industry',
'Value-added of the Tertiary Industry')
GDP <- GDP[, selected]
res <- cbind(GDP, wateruse[, 3], wastewater[,3])
colnames(res)
devtools::check(cran = T)
GDPColor_CWR <- c("#6B8033", "#020303", "#0D77B9")
colnames(GDPmix)[1] <- 'label'
\dontrun{
plotScatterPie(GDPmix, pieRange = 4:6, pieColor = GDPColor_CWR)
data(GDPmix)
colnames(GDPmix)[1] <- 'label'
plotScatterPie(GDPmix, pieRange = 4:6, pieColor = GDPColor_CWR)
devtools::check(cran = T)
plotScatterPie(GDPmix, pieRange = 4:6, pieColor = GDPColor_CWR)
debug(plotScatterPie)
plotScatterPie(GDPmix, pieRange = 4:6, pieColor = GDPColor_CWR)
devtools::check(cran = T)
plotScatterPie(GDPmix, pieRange = 4:6, pieColor = GDPColor_CWR)
debug(plotScatterPie)
plotScatterPie(GDPmix, pieRange = 4:6, pieColor = GDPColor_CWR)
getRadius(data$r)
ylim
ylim[2]- ylim[1]
devtools::check(cran = T)
plotScatterPie(GDPmix, pieRange = 4:6, pieColor = GDPColor_CWR)
devtools::check(cran = T)
plotScatterPie(GDPmix, pieRange = 4:6, pieColor = GDPColor_CWR)
devtools::check(cran = T)
plotScatterPie(GDPmix, pieRange = 4:6, pieColor = GDPColor_CWR)
devtools::check(cran = T)
plotScatterPie(GDPmix, pieRange = 4:6, pieColor = GDPColor_CWR)
devtools::check(cran = T)
plotScatterPie(GDPmix, pieRange = 4:6, pieColor = GDPColor_CWR)
devtools::check(cran = T)
plotScatterPie(GDPmix, pieRange = 4:6, pieColor = GDPColor_CWR)
debug(plotScatterPie)
plotScatterPie(GDPmix, pieRange = 4:6, pieColor = GDPColor_CWR)
xlim
xlabels
devtools::check(cran = T)
plotScatterPie(GDPmix, pieRange = 4:6, pieColor = GDPColor_CWR)
debug(plotScatterPie)
plotScatterPie(GDPmix, pieRange = 4:6, pieColor = GDPColor_CWR)
ratio
xlabels
xbreaks
ybreaks
ylabels
xbreaks
xlim
plotScatterPie(GDPmix, pieRange = 4:6, pieColor = GDPColor_CWR)
xlabels
xbreaks
getLabels(xlim, 5)
xlim
plotScatterPie(GDPmix, pieRange = 4:6, pieColor = GDPColor_CWR)
lim
labeln
x
nchar(round(x)) + 1
while (x == round(x, n)) {
n <- n - 1
}
round(x, 2)
x
round(x, 1)
round(x, 0)
plotScatterPie(GDPmix, pieRange = 4:6, pieColor = GDPColor_CWR)
devtools::check(cran = T)
plotScatterPie(GDPmix, pieRange = 4:6, pieColor = GDPColor_CWR)
debug(plotScatterPie)
plotScatterPie(GDPmix, pieRange = 4:6, pieColor = GDPColor_CWR)
x
res
round(x, 2)
round(x, 0)
round(x, -1)
devtools::check(cran = T)
plotScatterPie(GDPmix, pieRange = 4:6, pieColor = GDPColor_CWR)
debug(plotScatterPie)
plotScatterPie(GDPmix, pieRange = 4:6, pieColor = GDPColor_CWR)
xlim
ylim
xlabels
xbreaks
xlim
plotScatterPie(GDPmix, pieRange = 4:6, pieColor = GDPColor_CWR)
S
d
label1
lim
label1 < min(lim)
max(labelseq) > max(lim)
max(labelseq)
max(lim)
d
labelseq
data$x
devtools::check(cran = T)
plotScatterPie(GDPmix, pieRange = 4:6, pieColor = GDPColor_CWR)
devtools::check(cran = T)
plotScatterPie(GDPmix, pieRange = 4:6, pieColor = GDPColor_CWR)
GDPmix
data(GDPmix)
GDPmix
GDPmix[c(5, 9),]
a <- GDPmix[c(5, 9),]
GDPColor_CWR <- c("#6B8033", "#020303", "#0D77B9")
colnames(GDPmix)[1] <- 'label'
colnames(a)[1] <- 'label'
plotScatterPie(a, pieRange = 4:6, pieColor = GDPColor_CWR)
devtools::check(cran = T)
plotScatterPie(a, pieRange = 4:6, pieColor = GDPColor_CWR)
debug(plotScatterPie)
plotScatterPie(a, pieRange = 4:6, pieColor = GDPColor_CWR)
roundN((max(lim) - min(lim))/labeln)
x
strsplit(as.character(x), '\\.')[[1]]
l <- strsplit(as.character(x), '\\.')[[1]]
nchar(l[length(l)])
x
n <- nchar(l[length(l)])
round(x, 0)
nchar(l[length(l)])
round(x, 15)
round(x, 16)
round(x, 14)
round(x, 12)
x
length(l)
l
l[length(l)]
x
x == round(x, 15)
x == round(x, 14)
x == round(x, 8)
x == round(x, 7)
x == round(x, 6)
round(x, 6)
round(x, 4)
round(0.00009127321, 4)
round(0.009127321, 4)
round(0.009127321, 3)
xx
x
l[2]
grep(l[2], '0')
grep('0', l[2])
grep('0', l[2])
grepl('0', l[2])
grep('0', '00001283123721')
grep('0', '000012803123721')
?grep
strsplit(l[2], '0')
strsplit(l[2], '')
grepl('1', strsplit(l[2], ''))
grep('1', strsplit(l[2], ''))
grep(strsplit(l[2], ''), '1')
grep('1', strsplit(l[2], '')[[1]])
i1
l1 <- strsplit(l[2], '')[1]
l1
l1 <- strsplit(l[2], '')[[1]]
l1
n <- 0
x <- 0
for (i in l1) {
if (li[i] != '0') break
x <- x + 1
}
x
x <- 0.128372173721371
l <- strsplit(as.character(x), '\\.')[[1]]
l1 <- strsplit(l[2], '')[[1]]
l1
n <- 0
for (i in l1) {
if (i != '0') break
n <- n + 1
}
n
round(x, 0)
round(x, 2)
x <- 0.00004212
l <- strsplit(as.character(x), '\\.')[[1]]
l1 <- strsplit(l[2], '')[[1]]
n <- 0
for (i in l1) {
if (i != '0') break
n <- n + 1
}
n
li
l1
x <- 0.0004532
l <- strsplit(as.character(x), '\\.')[[1]]
l1 <- strsplit(l[2], '')[[1]]
n <- 0
for (i in l1) {
if (i != '0') break
n <- n + 1
}
n
x
round(x, 5)
devtools::check(cran = T)
plotScatterPie(a, pieRange = 4:6, pieColor = GDPColor_CWR)
debug(plotScatterPie)
plotScatterPie(a, pieRange = 4:6, pieColor = GDPColor_CWR)
xlim
roundN((max(lim) - min(lim))/labeln)
lim
(max(lim) - min(lim))/labeln
x
x
li
l1
x
devtools::check(cran = T)
plotScatterPie(a, pieRange = 4:6, pieColor = GDPColor_CWR)
round(1.34, 2)
round(1.34, 3)
round(1.34, 1)
devtools::check(cran = T)
plotScatterPie(GDPmix, pieRange = 4:6, pieColor = GDPColor_CWR)
GDPColor_CWR <- c("#6B8033", "#020303", "#0D77B9")
colnames(GDPmix)[1] <- 'label'
plotScatterPie(GDPmix, pieRange = 4:6, pieColor = GDPColor_CWR)
plotScatterPie(GDPmix[1, 2], pieRange = 4:6, pieColor = GDPColor_CWR)
plotScatterPie(GDPmix[1:2,], pieRange = 4:6, pieColor = GDPColor_CWR)
plotScatterPie(GDPmix[1:3,], pieRange = 4:6, pieColor = GDPColor_CWR)
plotScatterPie(GDPmix[1:3,], pieRange = 4:6, pieColor = GDPColor_CWR)
debug(plotScatterPie)
plotScatterPie(GDPmix[1:3,], pieRange = 4:6, pieColor = GDPColor_CWR)
xlim
lim
roundN((max(lim) - min(lim))/labeln)
(max(lim) - min(lim))/labeln
round(0.437)
round(0.437, 1)
round(0.437*0.5)/0.5
round(0.437*0.5, 1)/0.5
round(0.437*2)/2
round(0.437*3)/3
round(0.437*5)/5
round(0.437*2)/2
round(0.467*2)/2
round(0.667*2)/2
round(0.967*2)/2
res
round(x, n)
round(x*2, n)/2
x
round(x*2)/2
round(21*2)/2
round(21*0.2)/0.2
round(2.1*0.2)/0.2
round(9*0.2)/0.2
round(6*0.2)/0.2
round(4*0.2)/0.2
round(1*0.2)/0.2
round(4*0.2)/0.2
devtools::check(cran = T)
plotScatterPie(GDPmix[1:3,], pieRange = 4:6, pieColor = GDPColor_CWR)
debug(plotScatterPie)
round(23 /5)*5
round(2300/5)*5
round(23009/5)*5
round(0.25/5)*5
power(5, 2)
power(5)
power(2, 4)
pow(5,2)
5 * 10^(n-1)
5 * 10^(-1)
5 * 10^(-2)
devtools::check(cran = T)
plotScatterPie(GDPmix[1:3,], pieRange = 4:6, pieColor = GDPColor_CWR)
debug(roundN)
debug(roundN)
plotScatterPie(GDPmix[1:3,], pieRange = 4:6, pieColor = GDPColor_CWR)
x
round(x / n) * n
x
round(x / 5) * 5
undebug(roundN)
undebug(getLabels)
debug(getLabels)
plotScatterPie(GDPmix[1:3,], pieRange = 4:6, pieColor = GDPColor_CWR)
d
d
roundN((max(lim) - min(lim))/labeln)
round(min(lim), d[2])
round(1.5/5) * 5
min(lim)
d[2]
round(min(lim) *０．５)/0.5
labeln
lim
labeln
d
label1 <- round(min(lim) / d[2]) * d[2]
label1
label1 < min(lim)
label1 <- label1 + d[1]
label1
seq(label1, by = d[1], length.out = labeln)
max(labelseq) > max(lim)
labelseq <- seq(label1, by = d[1], length.out = labeln)
max(labelseq) > max(lim)
max(lim)
labelseq <- seq(label1, by = d[1], length.out = labeln - 1)
labelseq
devtools::check(cran = T)
plotScatterPie(GDPmix[1:3,], pieRange = 4:6, pieColor = GDPColor_CWR)
plotScatterPie(GDPmix[1:2,], pieRange = 4:6, pieColor = GDPColor_CWR)
plotScatterPie(GDPmix[1:3,], pieRange = 4:6, pieColor = GDPColor_CWR)
plotScatterPie(GDPmix, pieRange = 4:6, pieColor = GDPColor_CWR)
devtools::check(cran = T)
plotScatterPie(GDPmix, pieRange = 4:6, pieColor = GDPColor_CWR)
debug(plotScatterPie)
plotScatterPie(GDPmix, pieRange = 4:6, pieColor = GDPColor_CWR)
d <- roundN((max(lim) - min(lim))/labeln)
d
x
round(1/5)*5
l <- strsplit(as.character(x), '\\.')[[1]]
l1 <- strsplit(l[2], '')[[1]]
n <- 0
for (i in l1) {
if (i != '0') break
n <- n + 1
}
n <- 5 * 10^(n-1)
round(x / n) * n
round(x / n)
layer_basic <- ggplot(data, aes(x = x)) +
geom_point(data = data, aes(x, y), size = radius)
layer_pie <- geom_scatterpie(data = data, aes(x, y, r = radius),
cols = colnames(data)[pieRange], color = 'white')
if (is.null(labelLine)) labelLine <- max(data$radius) / 15
data <- GDPmix
pieRange = 4:6
xmeanLine = T
ymeanLine = TRUE
labelLine = NULL
output = FALSE
adj <- getLim(data$x, data$y)
xlim <- adj$lim[1:2]
ylim <- adj$lim[3:4]
ratio <- adj$ratio
if (adj$change == 'x') {
xlabels <- getLabels(xlim / ratio, 5)
data$x <- data$x * ratio
xbreaks <- xlabels * ratio
ybreaks <- getLabels(ylim, 4)
ylabels <- ybreaks
} else if (adj$change == 'y') {
xbreaks <- getLabels(xlim, 5)
xlabels <- xbreaks
ylabels <- getLabels(ylim / ratio, 4)
data$y <- data$y * ratio
ybreaks <- ylabels * ratio
}
data$radius <- getRadius(data$r) * (ylim[2] - ylim[1]) / 50
with (data, {
layer_basic <- ggplot(data, aes(x = x)) +
geom_point(data = data, aes(x, y), size = radius)
layer_pie <- geom_scatterpie(data = data, aes(x, y, r = radius),
cols = colnames(data)[pieRange], color = 'white')
if (is.null(labelLine)) labelLine <- max(data$radius) / 16
layer_label <- geom_text_repel(data = data, aes(x, y, label = label),
point.padding = unit(labelLine, "lines"))
#layer_legend <- geom_scatterpie_legend(data$radius, x= 0, y=0)
if (xmeanLine == TRUE) layer_basic <- layer_basic + geom_vline(xintercept = mean(data$x), color = 'red', size = 1.5, linetype = 2)
if (ymeanLine == TRUE) layer_basic <- layer_basic + geom_hline(yintercept = mean(data$y), color = 'red', size = 1.5, linetype = 2)
if (!is.null(pieColor)) layer_basic <- layer_basic + scale_fill_manual(values = pieColor)
layer_plot <- layer_basic + layer_pie + layer_label  +
coord_equal() + ggstyle() +
scale_x_continuous(breaks = xbreaks, labels = xlabels, limits = xlim) +
scale_y_continuous(breaks = ybreaks, labels = ylabels, limits = ylim)
print(layer_plot)
if (output == TRUE) return(layer_plot)
})
library(ggplot2)
library(scatterpie)
library(ggrepel)
layer_basic <- ggplot(data, aes(x = x)) +
geom_point(data = data, aes(x, y), size = radius)
data$radius <- getRadius(data$r) * (ylim[2] - ylim[1]) / 50
layer_basic <- ggplot(data, aes(x = x)) +
geom_point(data = data, aes(x, y), size = radius)
layer_basic <- ggplot(data, aes(x = x))
layer_pie <- geom_scatterpie(data = data, aes(x, y, r = radius),
cols = colnames(data)[pieRange], color = 'white')
if (is.null(labelLine)) labelLine <- max(data$radius) / 16
layer_label <- geom_label_repel(data = data, aes(x, y, label = label),
point.padding = unit(labelLine, "lines"))
layer_plot <- layer_basic + layer_pie + layer_label  +
coord_equal() + ggstyle() +
scale_x_continuous(breaks = xbreaks, labels = xlabels, limits = xlim) +
scale_y_continuous(breaks = ybreaks, labels = ylabels, limits = ylim)
print(layer_plot)
if (is.null(labelLine)) labelLine <- max(data$radius) / 20
layer_label <- geom_label_repel(data = data, aes(x, y, label = label),
point.padding = unit(labelLine, "lines"))
layer_plot <- layer_basic + layer_pie + layer_label  +
coord_equal() + ggstyle() +
scale_x_continuous(breaks = xbreaks, labels = xlabels, limits = xlim) +
scale_y_continuous(breaks = ybreaks, labels = ylabels, limits = ylim)
print(layer_plot)
if (is.null(labelLine)) labelLine <- max(data$radius) / 25
layer_label <- geom_label_repel(data = data, aes(x, y, label = label),
point.padding = unit(labelLine, "lines"))
layer_plot <- layer_basic + layer_pie + layer_label  +
coord_equal() + ggstyle() +
scale_x_continuous(breaks = xbreaks, labels = xlabels, limits = xlim) +
scale_y_continuous(breaks = ybreaks, labels = ylabels, limits = ylim)
print(layer_plot)
if (is.null(labelLine)) labelLine <- max(data$radius) / 30
labelLine
layer_label <- geom_label_repel(data = data, aes(x, y, label = label),
point.padding = unit(labelLine, "lines"))
layer_plot <- layer_basic + layer_pie + layer_label  +
coord_equal() + ggstyle() +
scale_x_continuous(breaks = xbreaks, labels = xlabels, limits = xlim) +
scale_y_continuous(breaks = ybreaks, labels = ylabels, limits = ylim)
print(layer_plot)
if (is.null(labelLine)) labelLine <- max(data$radius) / 40
labelLine
labelLine <- max(data$radius) / 20
layer_label <- geom_label_repel(data = data, aes(x, y, label = label),
point.padding = unit(labelLine, "lines"))
layer_plot <- layer_basic + layer_pie + layer_label  +
coord_equal() + ggstyle() +
scale_x_continuous(breaks = xbreaks, labels = xlabels, limits = xlim) +
scale_y_continuous(breaks = ybreaks, labels = ylabels, limits = ylim)
print(layer_plot)
labelLine <- max(data$radius) / 25
layer_label <- geom_label_repel(data = data, aes(x, y, label = label),
point.padding = unit(labelLine, "lines"))
layer_plot <- layer_basic + layer_pie + layer_label  +
coord_equal() + ggstyle() +
scale_x_continuous(breaks = xbreaks, labels = xlabels, limits = xlim) +
scale_y_continuous(breaks = ybreaks, labels = ylabels, limits = ylim)
print(layer_plot)
is.null(labelLine)
devtools::check(cran = T)
plotScatterPie(GDPmix, pieRange = 4:6, pieColor = GDPColor_CWR)
devtools::check(cran = T)
shiny::runApp('C:/Users/User/Google Drive/CWR/R/Provincial_waternomics')
plotScatterPie(GDPmix, pieRange = 4:6, pieColor = GDPColor_CWR)
debug(plotScatterPie)
plotScatterPie(GDPmix, pieRange = 4:6, pieColor = GDPColor_CWR)
label
devtools::check(cran = T)
plotScatterPie(GDPmix, pieRange = 4:6, pieColor = GDPColor_CWR)
plotScatterPie(GDPmix, pieRange = 4:6, pieColor = GDPColor_CWR, label_on = F)
devtools::check(cran = T)
devtools::check(cran = T)
devtools::check(cran = T)
GDPColor_CWR <- c("#6B8033", "#020303", "#0D77B9")
colnames(GDPmix)[1] <- 'label'
plotScatterPie(GDPmix, pieRange = 4:6, pieColor = GDPColor_CWR)
plotScatterPie(GDPmix, pieRange = 4:6, pieColor = GDPColor_CWR, label_on = F)
plotScatterPie(GDPmix, pieRange = 4:6, pieColor = GDPColor_CWR)
devtools::check(cran = T)
plotScatterPie(GDPmix, pieRange = 4:6, pieColor = GDPColor_CWR)
devtools::check(cran = T)
plotScatterPie(GDPmix, pieRange = 4:6, pieColor = GDPColor_CWR)
