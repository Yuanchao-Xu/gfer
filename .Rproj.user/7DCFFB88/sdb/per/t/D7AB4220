{
    "collab_server" : "",
    "contents" : "\n\n#' Check if a company is listed in Chinese stock market\n#'\n#'\n#' @param corpList company list you want to check if listed, should be a dataframe\n#' @param stockList Result from \\code{\\link{getStockList}}\n#'\n#'\n#' @importFrom data.table data.table\n#' @export\n#' @references\n#' http://info.cmbchina.com/Stock/Single/\n\nis.listed <- function(corpList, stockList) {\n\n  res <- lapply(corpList[[1]], function(x) {\n    a <- with(stockList, {stockList[FullName == x]})\n    if (nrow(a) == 0) {\n      a <- data.table(Ticker = 'noinfo', StockName = 'noinfo', Fullname = 'noinfo', Abbreviation = 'noinfo',\n                      Exchange = 'noinfo')\n    } else if (nrow(a) > 1)\n      warning(paste(x, 'has more than one result, only first will be shown'))\n\n    return(a[1,])\n  })\n\n  resC <- rbindlist(res)\n  # attach corpList to compare and double check\n  resC$input <- corpList\n  return(resC)\n}\n\n#' Get information from Shanghai Exchange and Shenzhen Exchange.\n#' This will only get stock information in Shanghai Exchange and Shenzhen Exchange\n#' Including stocker ticker, stock name and company full name. Data comes from China Merchants Bank\n#'\n#' @export\n#' @importFrom httr GET\n\n#' @references\n#' http://info.cmbchina.com/Stock/Single/\ngetStockList <- function() {\n  exchangeInfo <- data.frame(name = c('szA', 'szB', 'shA', 'shB'))\n  exchangeInfo$Feature <- c('sza', 'szb', 'sha', 'shb')\n  #total page number for stock exchanges c(27, 3, 74, 3)\n  exchangeInfo$PageNO <- c(2, 3, 2, 3)\n\n  finalList <- mapply(getStockList_unit, exchangeInfo$Feature, exchangeInfo$PageNO, exchangeInfo$name,\n                      SIMPLIFY = FALSE)\n  res <- rbindlist(finalList)\n  return(res)\n}\n\n\n#' @importFrom rvest html_table %>%\n#' @importFrom xml2 read_html\n#' @importFrom data.table rbindlist\ngetStockList_unit <- function(feature, tPage, exName) {\n  url1 <- 'http://info.cmbchina.com/Stock/Single/?channel=Single&'\n  res <- lapply(1:tPage, function(i) {\n    url <- paste(url1, 't=', feature, '&page=', i, sep = '')\n    a <- read_html(url) %>%\n      html_table()\n    a <- a[[1]]\n    a <- a[2:nrow(a), ]\n    message(paste('page', i))\n    return(a)\n  })\n\n  resC <- rbindlist(res)\n  colnames(resC) <- c('Ticker', 'StockName', \"FullName\", 'Abbreviation')\n  resC$Exchange <- rep(exName, nrow(resC))\n\n  message(paste(feature, 'Done'))\n\n\n  return(resC)\n}\n\n\n\n# ##########################\n\n\n\n\n\n\n#  following is to scrape all the company information, but since it takes too much time, temporarily suspended.\n#\n#\n# is.listed <- function(){\n#   url <- 'http://www.cninfo.com.cn/cninfo-new/information/companylist'\n#   a <- GET(url)\n#   b <- content(a, as = 'text')\n#\n#\n#   exchangeinfo <- data.table(name = c('szMain', 'szMiddleSmall', 'startUp', 'shMain', 'hkMain', 'hkStartUp'))\n#   exchangeinfo$Feature <- c('<div id=\"con-a-1\" class=\"hover\">', '<div id=\"con-a-2\" style=\"display:none\">',\n#                             '<div id=\"con-a-3\" style=\"display:none\">', '<div id=\"con-a-4\" style=\"display:none\">',\n#                             '<div id=\"con-a-5\" style=\"display:none\">', '<div id=\"con-a-6\" style=\"display:none\">')\n#\n#   exchangeinfo$start <- sapply(exchangeinfo$Feature, function(x) regexpr(x, b))\n#\n#   exchangeinfo$end <- c(exchangeinfo$start[2:nrow(exchangeinfo)], nchar(b))\n#\n#   exchangeList <- mapply(function(x, y) substr(b, x, y),exchangeinfo$start, exchangeinfo$end)\n#\n#   message('Note: since it will load the full list from internet, it will take about 20 minutes...')\n#\n#   finalList <- mapply(function(x, y) getStockFullName(x, y), exchangeList, exchangeinfo$name)\n#\n#   res <- rbindlist(finalList)\n#\n#\n#   return(res)\n#\n# }\n#\n# getStockFullName <- function(exchangeList, exch) {\n#   a <- strsplit(exchangeList, 'href=\\\"')[[1]]\n#   a <- a[2:length(a)]\n#\n#   tickers <- unlist(lapply(a, function(x) {\n#     n <- regexpr('\">', x)\n#     return(substr(x, n+2, n+7))\n#   }))\n#\n#   names <- unlist(lapply(a, function(x) {\n#     n1 <- regexpr('\">', x)\n#     n2 <- regexpr('</a>', x)\n#     return(substr(x, n1+9, n2-1))\n#   }))\n#\n#   links <- unlist(lapply(a, function(x) {\n#     n <- regexpr('\">', x)\n#     return(substr(x, 1, n-1))\n#   }))\n#\n#   # next from the links get the full name\n#   fullnames <- unlist(lapply(links, function(x) getStockFullName_unit(x)))\n#\n#   exchange <- rep(exch, length(tickers))\n#\n#\n#   res <- data.table(ticker = tickers, name = names, fullname = fullnames, exchange = exchange)\n#   print(paste(exch, 'Done!'))\n#   return(res)\n# }\n#\n#\n# getStockFullName_unit <- function(link) {\n#   url1 <- 'http://www.cninfo.com.cn/information/brief/'\n#   url2 <- unlist(strsplit(link, 'fulltext?', fixed = T))[2]\n#   url3 <- '.html'\n#   url <- paste(url1, url2, url3, sep = '')\n#\n#   fullname <- tryCatch({\n#     html_table(read_html(url))[[2]][1, 2]\n#   }, error = function(cond) {\n#     message(paste(url2, 'has connection issues'))\n#     return('error')\n#   })\n#\n#   print(fullname)\n#   return(fullname)\n# }\n",
    "created" : 1490149061422.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1429045307",
    "id" : "D7AB4220",
    "lastKnownWriteTime" : 1490173899,
    "last_content_update" : 1490173899296,
    "path" : "~/GitHub/gfer/R/listedInfo.R",
    "project_path" : "R/listedInfo.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 8,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}