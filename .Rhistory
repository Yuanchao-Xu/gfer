}
}, c(10,9,8,7,6,5,4,3,2,1),c(5,4,3,4,3,2,2,1,2,1))
FinalList <- mapply(getStockData_unit(x, y), exchangeInfo$Fearture, exchangeInfo$PageNO)
feature
FinalList <- mapply(paste, exchangeInfo$Fearture, exchangeInfo$PageNO)
exchangeInfo$Fearture
exchangeInfo$PageNO
FinalList <- mapply(paste, exchangeInfo$Feature, exchangeInfo$PageNO)
FinalList
FinalList <- mapply(getStockData_unit, exchangeInfo$Feature, exchangeInfo$PageNO)
feature
tPage
UNdebug(getStockData_unit)
undebug(getStockData_unit)
FinalList <- mapply(getStockData_unit, exchangeInfo$Feature, exchangeInfo$PageNO)
finalList <- FinalList
finalList
str(finalList)
getStockData_unit <- function(feature, tPage) {
url1 <- 'http://info.cmbchina.com/Stock/Single/?channel=Single&'
res <- lapply(1:tPage, function(i) {
url <- paste(url1, 't=', feature, '&page=', i, sep = '')
a <- read_html(url) %>%
html_table()
message(paste('page', i))
return(a[[1]])
})
resC <- rbindlist(res)
message(paste(feature, 'Done'))
return(resC)
}
exchangeInfo$Feature
exchangeInfo$PageNO
getStockData_unit <- function(feature, tPage) {
url1 <- 'http://info.cmbchina.com/Stock/Single/?channel=Single&'
res <- lapply(1:tPage, function(i) {
url <- paste(url1, 't=', feature, '&page=', i, sep = '')
a <- read_html(url) %>%
html_table()
message(paste('page', i))
return(a[[1]])
})
resC <- rbindlist(res)
message(paste(feature, 'Done'))
return(resC)
}
debug(getStockData_unit)
finalList <- mapply(getStockData_unit, exchangeInfo$Feature, exchangeInfo$PageNO)
finalList
finalList[[1]]
finalList <- mapply(getStockData_unit, exchangeInfo$Feature, exchangeInfo$PageNO)
resC
resC[2:]
resC[2:42]
resC1 <- [2: nrow(resC)]
resC1 <- resC[2: nrow(resC)]
resC1
getStockData_unit <- function(feature, tPage) {
url1 <- 'http://info.cmbchina.com/Stock/Single/?channel=Single&'
res <- lapply(1:tPage, function(i) {
url <- paste(url1, 't=', feature, '&page=', i, sep = '')
a <- read_html(url) %>%
html_table()
message(paste('page', i))
return(a[[1]])
})
resC <- rbindlist(res)
colnames(resC) <- resC[1,]
resC <- resC[2: nrow(resC)]
message(paste(feature, 'Done'))
return(resC)
}
finalList <- mapply(getStockData_unit, exchangeInfo$Feature, exchangeInfo$PageNO)
#' @importFrom rvest read_html html_table %>%
#' @importFrom data.table rbindlist
getStockData_unit <- function(feature, tPage) {
url1 <- 'http://info.cmbchina.com/Stock/Single/?channel=Single&'
res <- lapply(1:tPage, function(i) {
url <- paste(url1, 't=', feature, '&page=', i, sep = '')
a <- read_html(url) %>%
html_table()
message(paste('page', i))
return(a[[1]])
})
resC <- rbindlist(res)
colnames(resC) <- resC[1,]
resC <- resC[2: nrow(resC)]
message(paste(feature, 'Done'))
return(resC)
}
finalList <- mapply(getStockData_unit, exchangeInfo$Feature, exchangeInfo$PageNO)
debug(getStockData_unit)
finalList <- mapply(getStockData_unit, exchangeInfo$Feature, exchangeInfo$PageNO)
Q
finalList <- mapply(getStockData_unit, exchangeInfo$Feature, exchangeInfo$PageNO)
resC
[2: nrow(resC)]
resC[1,]
colnames(resC)
colnames(resC) <- resC[1,]
res[1, ]
resC[1,]
str(resC[1,])
colnames(resC) <- as.character(resC[1,])
resC
getStockData_unit <- function(feature, tPage) {
url1 <- 'http://info.cmbchina.com/Stock/Single/?channel=Single&'
res <- lapply(1:tPage, function(i) {
url <- paste(url1, 't=', feature, '&page=', i, sep = '')
a <- read_html(url) %>%
html_table()
message(paste('page', i))
return(a[[1]])
})
resC <- rbindlist(res)
colnames(resC) <- as.character(resC[1,])
resC <- resC[2: nrow(resC)]
message(paste(feature, 'Done'))
return(resC)
}
getStockData_unit <- function(feature, tPage) {
url1 <- 'http://info.cmbchina.com/Stock/Single/?channel=Single&'
res <- lapply(1:tPage, function(i) {
url <- paste(url1, 't=', feature, '&page=', i, sep = '')
a <- read_html(url) %>%
html_table()
message(paste('page', i))
return(a[[1]])
})
resC <- rbindlist(res)
colnames(resC) <- as.character(resC[1,])
resC <- resC[2: nrow(resC)]
message(paste(feature, 'Done'))
return(resC)
}
finalList <- mapply(getStockData_unit, exchangeInfo$Feature, exchangeInfo$PageNO)
finalList
a <- t(finalList)
a
rbindlist(a)
rbindlist(finalList)
a
getStockData_unit <- function(feature, tPage, exName) {
url1 <- 'http://info.cmbchina.com/Stock/Single/?channel=Single&'
res <- lapply(1:tPage, function(i) {
url <- paste(url1, 't=', feature, '&page=', i, sep = '')
a <- read_html(url) %>%
html_table()
message(paste('page', i))
return(a[[1]])
})
resC <- rbindlist(res)
colnames(resC) <- as.character(resC[1,])
resC <- resC[2: nrow(resC)]
resC$exchange <- rep(exName, nrow(resC))
message(paste(feature, 'Done'))
return(resC)
}
finalList <- mapply(getStockData_unit, exchangeInfo$Feature, exchangeInfo$PageNO, colnames(exchangeInfo))
finalList
finalList[[1]]
finalList[[2]]
finalList[[5]]
debug(getStockData_unit)
finalList <- mapply(getStockData_unit, exchangeInfo$Feature, exchangeInfo$PageNO, colnames(exchangeInfo))
resC
exName
colnames(exchangeInfo)
finalList <- mapply(getStockData_unit, exchangeInfo$Feature, exchangeInfo$PageNO, exchangeInfo$name)
finalList
str(finalList)
a <- t(finalList)
a
rbindlist(a)
do.call('rbind', a)
a
str(a)
finalList
finalList[[15]]
finalList[[16]]
matrix(finalList)
str(finalList)
finalList
names(finalList)
a
rbindlist(a)
a[[1]]
a[[2]]
a[[3]]
a
a <- finalList
a
a[[1]]
a[[2]]
a[[3]]
a[[4]]
debug(getStockData_unit)
finalList <- mapply(getStockData_unit, exchangeInfo$Feature, exchangeInfo$PageNO, exchangeInfo$name)
finalList <- mapply(getStockData_unit, exchangeInfo$Feature, exchangeInfo$PageNO, exchangeInfo$name)
finalList <- mapply(getStockData_unit, exchangeInfo$Feature, exchangeInfo$PageNO, exchangeInfo$name)
tPage
tPage <- 2
url <- paste(url1, 't=', feature, '&page=', i, sep = '')
url
a <- read_html(url) %>%
html_table()
a
a <- a[[1]][2:rnow(a[[1]])]
a <- a[[1]][2:nrow(a[[1]])]
nrow(a[[1]])
[2:nrow(a[[1]])]
[2:nrow(a[[1]])]
a[[1]][2:nrow(a[[1]])]
a <- read_html(url) %>%
html_table()
a <- a[[1]]
a <- a[2:nrow(a[[1]])]
a
a <- a[2:nrow(a)]
nrow(a)
a[2:nrow(a)]
a <- a[2:nrow(a), ]
a
#' @importFrom data.table rbindlist
getStockData_unit <- function(feature, tPage, exName) {
url1 <- 'http://info.cmbchina.com/Stock/Single/?channel=Single&'
res <- lapply(1:tPage, function(i) {
url <- paste(url1, 't=', feature, '&page=', i, sep = '')
a <- read_html(url) %>%
html_table()
a <- a[[1]]
a <- a[2:nrow(a), ]
message(paste('page', i))
return(a[[1]])
})
resC <- rbindlist(res)
colnames(resC) <- c('Ticker', 'StockName', "fullName", 'abbreviation')
resC$exchange <- rep(exName, nrow(resC))
message(paste(feature, 'Done'))
return(resC)
}
finalList <- mapply(getStockData_unit, exchangeInfo$Feature, exchangeInfo$PageNO, exchangeInfo$name)
debug(getStockData_unit)
finalList <- mapply(getStockData_unit, exchangeInfo$Feature, exchangeInfo$PageNO, exchangeInfo$name)
finalList <- mapply(getStockData_unit, exchangeInfo$Feature, exchangeInfo$PageNO, exchangeInfo$name)
res
getStockData_unit <- function(feature, tPage, exName) {
url1 <- 'http://info.cmbchina.com/Stock/Single/?channel=Single&'
res <- lapply(1:tPage, function(i) {
url <- paste(url1, 't=', feature, '&page=', i, sep = '')
a <- read_html(url) %>%
html_table()
a <- a[[1]]
a <- a[2:nrow(a), ]
message(paste('page', i))
return(a)
})
resC <- rbindlist(res)
colnames(resC) <- c('Ticker', 'StockName', "fullName", 'abbreviation')
resC$exchange <- rep(exName, nrow(resC))
message(paste(feature, 'Done'))
return(resC)
}
finalList <- mapply(getStockData_unit, exchangeInfo$Feature, exchangeInfo$PageNO, exchangeInfo$name)
finalList
a <- finalList
a[[1]]
a[[2]]
a[[3]]
a[[4]]
a[[5]]
a
?mapply
finalList <- mapply(getStockData_unit, exchangeInfo$Feature, exchangeInfo$PageNO, exchangeInfo$name, SIMPLIFY = F)
finalList
str(finalList)
res <- rbindlist(finalList)
res
stockData <- res
stockData
corpList <- '深圳发展银行股份有限公司'
x <- '深圳发展银行股份有限公司'
深圳发展银行股份有限公司
stockData[fullName == x]
stockData[fullName == 'dd']
length(stockData[fullName == 'dd'])
nrow(stockData[fullName == 'dd'])
stockData[fullName == x, 5]
a
b <- stockData[fullName == 'dd']
b
b <- c(1,2,3,4,5)
b
a <- rep('noinfo', 5)
a
res <- sapply(corpList, function(x) {
a<- stockData[fullName == x]
if (nrow(a) == 0) a <- rep('noinfo', 5)
})
res
res <- sapply(corpList, function(x) {
a<- stockData[fullName == x]
if (nrow(a) == 0) a <- rep('noinfo', 5)
return(a)
})
res
corpList <- c('深圳发展银行股份有限公司', '万科企业股份有限公司', 'dafadfas')
res <- sapply(corpList, function(x) {
a<- stockData[fullName == x]
if (nrow(a) == 0) a <- rep('noinfo', 5)
return(a)
})
corpList
res
res <- lapply(corpList, function(x) {
a<- stockData[fullName == x]
if (nrow(a) == 0) a <- rep('noinfo', 5)
return(a)
})
res
resC <- rbindlist(res)
a
a <- stockData[fullName == 'dafa']
a
a[1, ]
res <- lapply(corpList, function(x) {
a<- stockData[fullName == x]
if (nrow(a) == 0) {
a[1,] <- rep('noinfo', 5)
} else if (nrow(a) > 1)
warning(paste(x, 'has more than one result, only first will be shown'))
return(a[1,])
})
res <- lapply(corpList, function(x) {
a<- stockData[fullName == x]
if (nrow(a) == 0) {
a[1,] <- rep('noinfo', 5)
} else if (nrow(a) > 1)
warning(paste(x, 'has more than one result, only first will be shown'))
return(a[1,])
})
a
stockData[fullName == x]
a[1,] <- rep('noinfo', 5)
rbindlist(a, rep('noinfo', 5))
rbindlist(a, rep('noinfo', 5), use.names = T)
rbindlist(list(a, rep('noinfo', 5)), use.names = T)
rbindlist(list(a, rep('noinfo', 5)))
?insert
??insert
#' Get information from Shanghai Exchange and Shenzhen Exchange.
#' This will only get stock information in Shanghai Exchange and Shenzhen Exchange
#' Including stocker ticker, stock name and company full name. Data comes from China Merchants Bank
#'
#' @importFrom httr GET
#' @references
#' http://info.cmbchina.com/Stock/Single/
getStockList <- function() {
exchangeInfo <- data.frame(name = c('szA', 'szB', 'shA', 'shB'))
exchangeInfo$Feature <- c('sza', 'szb', 'sha', 'shb')
#total page number for stock exchanges c(27, 3, 74, 3)
exchangeInfo$PageNO <- c(2, 3, 2, 3)
finalList <- mapply(getStockList_unit, exchangeInfo$Feature, exchangeInfo$PageNO, exchangeInfo$name,
SIMPLIFY = FALSE)
res <- rbindlist(finalList)
return(res)
}
#' @importFrom rvest read_html html_table %>%
#' @importFrom data.table rbindlist
getStockList_unit <- function(feature, tPage, exName) {
url1 <- 'http://info.cmbchina.com/Stock/Single/?channel=Single&'
res <- lapply(1:tPage, function(i) {
url <- paste(url1, 't=', feature, '&page=', i, sep = '')
a <- read_html(url) %>%
html_table()
a <- a[[1]]
a <- a[2:nrow(a), ]
message(paste('page', i))
return(a)
})
resC <- rbindlist(res)
colnames(resC) <- c('Ticker', 'StockName', "FullName", 'Abbreviation')
resC$Exchange <- rep(exName, nrow(resC))
message(paste(feature, 'Done'))
return(resC)
}
res <- lapply(corpList, function(x) {
a<- stockData[fullName == x]
if (nrow(a) == 0) {
a <- data.table(Ticker = 'noinfo', StockName = 'noinfo', Fullname = 'noinfo', Abbreviation = 'noinfo',
Exchange = 'noinfo')
} else if (nrow(a) > 1)
warning(paste(x, 'has more than one result, only first will be shown'))
return(a[1,])
})
res
resC <- rbindlist(res)
resC
devtools::document()
devtools::document()''
devtools::document()
?read_html
?read_html
?read_html
devtools::document()
devtools::document()
devtools::document()
devtools::check(cran = T, manual = T)
devtools::check(cran = T, manual = T)
install.packages('rmarkdown')
devtools::install_github('Yuanchao-Xu/hyfo')
devtools::install_github('Yuanchao-Xu/gfer')
install.packages('hyfo')
devtools::install_github('Yuanchao-Xu/gfer')
a <- read.table('clipboard')
a
a <- read.table('clipboard')
a
debug(getStockData)
library(gfer)
debug(getStockData)
debug(getStockList)
devtools::install_github('Yuanchao-Xu/gfer')
library(gfer)
debug(getStockList)
debug(is.listed)
library(gfer)
getStockList
getPPPList
devtools::document()
devtools::check(cran = T, manual = T)
devtools::install_github('Yuanchao-Xu/gfer')
library(gfer)
debug(getStockList)
a <- getStockList()
A
a
data <- a
a <- read.table('clipboard')
a
is.listed(a, data)
debug(is.listed)
is.listed(a, data)
devtools::check()
devtools::document()
devtools::check(cran = T, manual = T)
devtools::document()
devtools::check(cran = T, manual = T)
devtools::document()
devtools::document()
devtools::check(cran = T, manual = T)
a
data
is.listed(a, data)
debug(is.listed)
is.listed(a, data)
devtools::check(cran = T, manual = T)
is.listed(a, data)
debug(is.listed)
is.listed(a, data)
data
is.listed(a, data)
corpList
x <- corpList[1]
x
x <- corpList[[1]]
x
is.listed <- function(corpList, stockList) {
res <- lapply(corpList[[1]], function(x) {
a <- with(stockList, {stockList[FullName == x]})
if (nrow(a) == 0) {
a <- data.table(Ticker = 'noinfo', StockName = 'noinfo', Fullname = 'noinfo', Abbreviation = 'noinfo',
Exchange = 'noinfo')
} else if (nrow(a) > 1)
warning(paste(x, 'has more than one result, only first will be shown'))
return(a[1,])
})
resC <- rbindlist(res)
return(resC)
}
is.listed <- function(corpList, stockList) {
res <- lapply(corpList[[1]], function(x) {
a <- with(stockList, {stockList[FullName == x]})
if (nrow(a) == 0) {
a <- data.table(Ticker = 'noinfo', StockName = 'noinfo', Fullname = 'noinfo', Abbreviation = 'noinfo',
Exchange = 'noinfo')
} else if (nrow(a) > 1)
warning(paste(x, 'has more than one result, only first will be shown'))
return(a[1,])
})
resC <- rbindlist(res)
return(resC)
}
is.listed(a, data)
library(data.table)
is.listed(a, data)
is.listed <- function(corpList, stockList) {
res <- lapply(corpList[[1]], function(x) {
a <- with(stockList, {stockList[FullName == x]})
if (nrow(a) == 0) {
a <- data.table(Ticker = 'noinfo', StockName = 'noinfo', Fullname = 'noinfo', Abbreviation = 'noinfo',
Exchange = 'noinfo')
} else if (nrow(a) > 1)
warning(paste(x, 'has more than one result, only first will be shown'))
return(a[1,])
})
resC <- rbindlist(res)
# attach corpList to compare and double check
resC$input <- corpList
return(resC)
}
is.listed(a, data)
